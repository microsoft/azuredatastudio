/*-----------------------------------------------------------------------------
| Copyright (c) Jupyter Development Team.
| Distributed under the terms of the Modified BSD License.
|----------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------
| RenderedText
|----------------------------------------------------------------------------*/

output-component .jp-RenderedText {
	text-align: left;
	padding-left: var(--jp-code-padding);
	font-size: var(--jp-code-font-size);
	line-height: var(--jp-code-line-height);
	font-family: var(--jp-code-font-family);
}

output-component .jp-RenderedText pre,
.jp-RenderedJavaScript pre,
output-component .jp-RenderedHTMLCommon pre {
	color: var(--jp-content-font-color1);
	border: none;
	margin: 0px;
	padding: 0px;
}

/* ansi_up creates classed spans for console foregrounds and backgrounds. */
output-component .jp-RenderedText pre .ansi-black-fg {
	color: #3e424d;
}
output-component .jp-RenderedText pre .ansi-red-fg {
	color: #e75c58;
}
output-component .jp-RenderedText pre .ansi-green-fg {
	color: #00a250;
}
output-component .jp-RenderedText pre .ansi-yellow-fg {
	color: #ddb62b;
}
output-component .jp-RenderedText pre .ansi-blue-fg {
	color: #208ffb;
}
output-component .jp-RenderedText pre .ansi-magenta-fg {
	color: #d160c4;
}
output-component .jp-RenderedText pre .ansi-cyan-fg {
	color: #60c6c8;
}
output-component .jp-RenderedText pre .ansi-white-fg {
	color: #c5c1b4;
}

output-component .jp-RenderedText pre .ansi-black-bg {
	background-color: #3e424d;
}
output-component .jp-RenderedText pre .ansi-red-bg {
	background-color: #e75c58;
}
output-component .jp-RenderedText pre .ansi-green-bg {
	background-color: #00a250;
}
output-component .jp-RenderedText pre .ansi-yellow-bg {
	background-color: #ddb62b;
}
output-component .jp-RenderedText pre .ansi-blue-bg {
	background-color: #208ffb;
}
output-component .jp-RenderedText pre .ansi-magenta-bg {
	background-color: #d160c4;
}
output-component .jp-RenderedText pre .ansi-cyan-bg {
	background-color: #60c6c8;
}
output-component .jp-RenderedText pre .ansi-white-bg {
	background-color: #c5c1b4;
}

output-component .jp-RenderedText pre .ansi-bright-black-fg {
	color: #282c36;
}
output-component .jp-RenderedText pre .ansi-bright-red-fg {
	color: #b22b31;
}
output-component .jp-RenderedText pre .ansi-bright-green-fg {
	color: #007427;
}
output-component .jp-RenderedText pre .ansi-bright-yellow-fg {
	color: #b27d12;
}
output-component .jp-RenderedText pre .ansi-bright-blue-fg {
	color: #0065ca;
}
output-component .jp-RenderedText pre .ansi-bright-magenta-fg {
	color: #a03196;
}
output-component .jp-RenderedText pre .ansi-bright-cyan-fg {
	color: #258f8f;
}
output-component .jp-RenderedText pre .ansi-bright-white-fg {
	color: #a1a6b2;
}

output-component .jp-RenderedText pre .ansi-bright-black-bg {
	background-color: #282c36;
}
output-component .jp-RenderedText pre .ansi-bright-red-bg {
	background-color: #b22b31;
}
output-component .jp-RenderedText pre .ansi-bright-green-bg {
	background-color: #007427;
}
output-component .jp-RenderedText pre .ansi-bright-yellow-bg {
	background-color: #b27d12;
}
output-component .jp-RenderedText pre .ansi-bright-blue-bg {
	background-color: #0065ca;
}
output-component .jp-RenderedText pre .ansi-bright-magenta-bg {
	background-color: #a03196;
}
output-component .jp-RenderedText pre .ansi-bright-cyan-bg {
	background-color: #258f8f;
}
output-component .jp-RenderedText pre .ansi-bright-white-bg {
	background-color: #a1a6b2;
}

output-component .jp-RenderedText[data-mime-type='application/vnd.jupyter.stderr'] {
	background: var(--jp-rendermime-error-background);
	padding-top: var(--jp-code-padding);
}

/*-----------------------------------------------------------------------------
| RenderedLatex
|----------------------------------------------------------------------------*/

.jp-RenderedLatex {
	color: var(--jp-content-font-color1);
	font-size: var(--jp-content-font-size1);
	line-height: var(--jp-content-line-height);
}

/* Left-justify outputs.*/
.jp-OutputArea-output.jp-RenderedLatex {
	text-align: left;
}

/*-----------------------------------------------------------------------------
| RenderedHTML
|----------------------------------------------------------------------------*/

output-component .jp-RenderedHTMLCommon {
	color: var(--jp-content-font-color1);
	font-family: var(--jp-content-font-family);
	font-size: var(--jp-content-font-size1);
	line-height: var(--jp-content-line-height);
	/* Give a bit more R padding on Markdown text to keep line lengths reasonable */
	padding-right: 20px;
}

output-component .jp-RenderedHTMLCommon em {
	font-style: italic;
}

output-component .jp-RenderedHTMLCommon strong {
	font-weight: bold;
}

output-component .jp-RenderedHTMLCommon u {
	text-decoration: underline;
}

output-component .jp-RenderedHTMLCommon a:link {
	text-decoration: none;
}

output-component .jp-RenderedHTMLCommon a:hover {
	text-decoration: underline;
}

output-component .jp-RenderedHTMLCommon a:visited {
	text-decoration: none;
}

/* Headings */

output-component .jp-RenderedHTMLCommon h1,
output-component .jp-RenderedHTMLCommon h2,
output-component .jp-RenderedHTMLCommon h3,
output-component .jp-RenderedHTMLCommon h4,
output-component .jp-RenderedHTMLCommon h5,
output-component .jp-RenderedHTMLCommon h6 {
	line-height: var(--jp-content-heading-line-height);
	font-weight: var(--jp-content-heading-font-weight);
	font-style: normal;
	margin: var(--jp-content-heading-margin-top) 0
		var(--jp-content-heading-margin-bottom) 0;
}

output-component .jp-RenderedHTMLCommon h1:first-child,
output-component .jp-RenderedHTMLCommon h2:first-child,
output-component .jp-RenderedHTMLCommon h3:first-child,
output-component .jp-RenderedHTMLCommon h4:first-child,
output-component .jp-RenderedHTMLCommon h5:first-child,
output-component .jp-RenderedHTMLCommon h6:first-child {
	margin-top: calc(0.5 * var(--jp-content-heading-margin-top));
}

output-component .jp-RenderedHTMLCommon h1:last-child,
output-component .jp-RenderedHTMLCommon h2:last-child,
output-component .jp-RenderedHTMLCommon h3:last-child,
output-component .jp-RenderedHTMLCommon h4:last-child,
output-component .jp-RenderedHTMLCommon h5:last-child,
output-component .jp-RenderedHTMLCommon h6:last-child {
	margin-bottom: calc(0.5 * var(--jp-content-heading-margin-bottom));
}

output-component .jp-RenderedHTMLCommon h1 {
	font-size: var(--jp-content-font-size5);
}

output-component .jp-RenderedHTMLCommon h2 {
	font-size: var(--jp-content-font-size4);
}

output-component .jp-RenderedHTMLCommon h3 {
	font-size: var(--jp-content-font-size3);
}

output-component .jp-RenderedHTMLCommon h4 {
	font-size: var(--jp-content-font-size2);
}

output-component .jp-RenderedHTMLCommon h5 {
	font-size: var(--jp-content-font-size1);
}

output-component .jp-RenderedHTMLCommon h6 {
	font-size: var(--jp-content-font-size0);
}

/* Lists */

output-component .jp-RenderedHTMLCommon ul:not(.list-inline),
output-component .jp-RenderedHTMLCommon ol:not(.list-inline) {
	padding-left: 2em;
}

output-component .jp-RenderedHTMLCommon ul {
	list-style: disc;
}

output-component .jp-RenderedHTMLCommon ul ul {
	list-style: square;
}

output-component .jp-RenderedHTMLCommon ul ul ul {
	list-style: circle;
}

output-component .jp-RenderedHTMLCommon ol {
	list-style: decimal;
}

output-component .jp-RenderedHTMLCommon ol ol {
	list-style: upper-alpha;
}

output-component .jp-RenderedHTMLCommon ol ol ol {
	list-style: lower-alpha;
}

output-component .jp-RenderedHTMLCommon ol ol ol ol {
	list-style: lower-roman;
}

output-component .jp-RenderedHTMLCommon ol ol ol ol ol {
	list-style: decimal;
}

output-component .jp-RenderedHTMLCommon ol,
output-component .jp-RenderedHTMLCommon ul {
	margin-bottom: 1em;
}

output-component .jp-RenderedHTMLCommon ul ul,
output-component .jp-RenderedHTMLCommon ul ol,
output-component .jp-RenderedHTMLCommon ol ul,
output-component .jp-RenderedHTMLCommon ol ol {
	margin-bottom: 0em;
}

output-component .jp-RenderedHTMLCommon hr {
	color: var(--jp-border-color2);
	background-color: var(--jp-border-color1);
	margin-top: 1em;
	margin-bottom: 1em;
}

output-component .jp-RenderedHTMLCommon > pre {
	margin: 1.5em 2em;
}

output-component .jp-RenderedHTMLCommon pre,
output-component .jp-RenderedHTMLCommon code {
	border: 0;
	background-color: var(--jp-layout-color0);
	color: var(--jp-content-font-color1);
	font-family: var(--jp-code-font-family);
	font-size: inherit;
	line-height: var(--jp-code-line-height);
	padding: 0;
}

output-component .jp-RenderedHTMLCommon p > code {
	background-color: var(--jp-layout-color2);
	padding: 1px 5px;
}

/* Tables */

output-component .jp-RenderedHTMLCommon table {
	border-collapse: collapse;
	border-spacing: 0;
	border: none;
	color: var(--jp-ui-font-color1);
	font-size: 12px;
	table-layout: auto;
	margin-left: auto;
	margin-right: auto;
}

output-component .jp-RenderedHTMLCommon thead {
	border-bottom: var(--jp-border-width) solid var(--jp-border-color1);
	vertical-align: bottom;
}

output-component .jp-RenderedHTMLCommon td,
output-component .jp-RenderedHTMLCommon th,
output-component .jp-RenderedHTMLCommon tr {
	text-align: left;
	vertical-align: middle;
	padding: 0.5em 0.5em;
	line-height: normal;
	white-space: normal;
	max-width: none;
	border: none;
}

.jp-RenderedMarkdown.jp-RenderedHTMLCommon td,
.jp-RenderedMarkdown.jp-RenderedHTMLCommon th {
	max-width: none;
}

output-component  th {
	font-weight: bold;
}

output-component .jp-RenderedHTMLCommon tbody tr:nth-child(odd) {
	background: var(--jp-layout-color0);
}

output-component .jp-RenderedHTMLCommon tbody tr:nth-child(even) {
	background: var(--jp-rendermime-table-row-background);
}

output-component .jp-RenderedHTMLCommon tbody tr:hover {
	background: var(--jp-rendermime-table-row-hover-background);
}

output-component .jp-RenderedHTMLCommon table {
	margin-bottom: 1em;
	display: table-row;
}

output-component .jp-RenderedHTMLCommon p {
	text-align: left;
	margin: 0px;
}

output-component .jp-RenderedHTMLCommon p {
	margin-bottom: 1em;
}

output-component .jp-RenderedHTMLCommon img {
	-moz-force-broken-image-icon: 1;
}

/* Restrict to direct children as other images could be nested in other content. */
output-component .jp-RenderedHTMLCommon > img {
	display: block;
	margin-left: auto;
	margin-right: auto;
	margin-bottom: 1em;
}

/* Change color behind transparent images if they need it... */
[data-theme-light='false'] .jp-RenderedImage img.jp-needs-light-background {
	background-color: var(--jp-inverse-layout-color1);
}
[data-theme-light='true'] .jp-RenderedImage img.jp-needs-dark-background {
	background-color: var(--jp-inverse-layout-color1);
}
/* ...or leave it untouched if they don't */
[data-theme-light='false'] .jp-RenderedImage img.jp-needs-dark-background {
}
[data-theme-light='true'] .jp-RenderedImage img.jp-needs-light-background {
}

output-component .jp-RenderedHTMLCommon img,
.jp-RenderedImage img,
output-component .jp-RenderedHTMLCommon svg,
.jp-RenderedSVG svg {
	max-width: 100%;
	height: auto;
}

output-component .jp-RenderedHTMLCommon img.jp-mod-unconfined,
.jp-RenderedImage img.jp-mod-unconfined,
output-component .jp-RenderedHTMLCommon svg.jp-mod-unconfined,
.jp-RenderedSVG svg.jp-mod-unconfined {
	max-width: none;
}

output-component .jp-RenderedHTMLCommon .alert {
	margin-bottom: 1em;
}

output-component .jp-RenderedHTMLCommon blockquote {
	margin: 1em 2em;
	padding: 0 1em;
	border-left: 5px solid var(--jp-border-color2);
}

a.jp-InternalAnchorLink {
	visibility: hidden;
	margin-left: 8px;
	color: var(--md-blue-800);
}

h1:hover .jp-InternalAnchorLink,
h2:hover .jp-InternalAnchorLink,
h3:hover .jp-InternalAnchorLink,
h4:hover .jp-InternalAnchorLink,
h5:hover .jp-InternalAnchorLink,
h6:hover .jp-InternalAnchorLink {
	visibility: visible;
}

/* Most direct children of .jp-RenderedHTMLCommon have a margin-bottom of 1.0.
 * At the bottom of cells this is a bit too much as there is also spacing
 * between cells. Going all the way to 0 gets too tight between markdown and
 * code cells.
 */
output-component .jp-RenderedHTMLCommon > *:last-child {
	margin-bottom: 0.5em;
	overflow-x: scroll;
}

/*-----------------------------------------------------------------------------
| RenderedPDF
|----------------------------------------------------------------------------*/

.jp-RenderedPDF {
	font-size: var(--jp-ui-font-size1);
}

plotly-output .plotly-wrapper {
	display: block;
	overflow-y: hidden;
}

output-component .grid-panel .action-label.codicon {
	min-width: 16px;
	margin-right: 6px;
	margin-bottom: 6px;
}
