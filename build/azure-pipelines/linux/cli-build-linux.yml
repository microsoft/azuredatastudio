parameters:
  - name: VSCODE_BUILD_LINUX
    type: boolean
    default: false
  - name: VSCODE_BUILD_LINUX_ARM64
    type: boolean
    default: false
  - name: VSCODE_BUILD_LINUX_ARMHF
    type: boolean
    default: false
  - name: VSCODE_CHECK_ONLY
    type: boolean
    default: false
  - name: VSCODE_QUALITY
    type: string

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "18.x"

  - ${{ if ne(parameters.VSCODE_QUALITY, 'oss') }}:
    - template: ../cli/cli-apply-patches.yml

  - task: Npm@1
    displayName: Download openssl prebuilt
    inputs:
      command: custom
      customCommand: pack @vscode-internal/openssl-prebuilt@0.0.8
      customRegistry: useFeed
      customFeed: "Monaco/openssl-prebuilt"
      workingDir: $(Build.ArtifactStagingDirectory)

  - script: |
      set -e
      mkdir $(Build.ArtifactStagingDirectory)/openssl
      tar -xvzf $(Build.ArtifactStagingDirectory)/vscode-internal-openssl-prebuilt-0.0.8.tgz --strip-components=1 --directory=$(Build.ArtifactStagingDirectory)/openssl
    displayName: Extract openssl prebuilt

  - ${{ if eq(parameters.VSCODE_BUILD_LINUX_ARMHF, true) }}:
    - bash: sudo apt-get install -yq gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf binutils-arm-linux-gnueabihf
      displayName: Install arm32 toolchains

  - ${{ if eq(parameters.VSCODE_BUILD_LINUX_ARM64, true) }}:
    - bash: sudo apt-get install -yq gcc-aarch64-linux-gnu g++-aarch64-linux-gnu binutils-aarch64-linux-gnu
      displayName: Install arm64 toolchains

  - template: ../cli/install-rust-posix.yml
    parameters:
      targets:
        - ${{ if eq(parameters.VSCODE_BUILD_LINUX_ARM64, true) }}:
          - aarch64-unknown-linux-gnu
        - ${{ if eq(parameters.VSCODE_BUILD_LINUX, true) }}:
          - x86_64-unknown-linux-gnu
        - ${{ if eq(parameters.VSCODE_BUILD_LINUX_ARMHF, true) }}:
          - armv7-unknown-linux-gnueabihf

  - ${{ if eq(parameters.VSCODE_BUILD_LINUX_ARM64, true) }}:
    - template: ../cli/cli-compile-and-publish.yml
      parameters:
        VSCODE_QUALITY: ${{ parameters.VSCODE_QUALITY }}
        VSCODE_CLI_TARGET: aarch64-unknown-linux-gnu
        VSCODE_CLI_ARTIFACT: vscode_cli_linux_arm64_cli
        VSCODE_CHECK_ONLY: ${{ parameters.VSCODE_CHECK_ONLY }}
        VSCODE_CLI_ENV:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
          OPENSSL_LIB_DIR: $(Build.ArtifactStagingDirectory)/openssl/arm64-linux/lib
          OPENSSL_INCLUDE_DIR: $(Build.ArtifactStagingDirectory)/openssl/arm64-linux/include

  - ${{ if eq(parameters.VSCODE_BUILD_LINUX, true) }}:
    - template: ../cli/cli-compile-and-publish.yml
      parameters:
        VSCODE_QUALITY: ${{ parameters.VSCODE_QUALITY }}
        VSCODE_CLI_TARGET: x86_64-unknown-linux-gnu
        VSCODE_CLI_ARTIFACT: vscode_cli_linux_x64_cli
        VSCODE_CHECK_ONLY: ${{ parameters.VSCODE_CHECK_ONLY }}
        VSCODE_CLI_ENV:
          OPENSSL_LIB_DIR: $(Build.ArtifactStagingDirectory)/openssl/x64-linux/lib
          OPENSSL_INCLUDE_DIR: $(Build.ArtifactStagingDirectory)/openssl/x64-linux/include

  - ${{ if eq(parameters.VSCODE_BUILD_LINUX_ARMHF, true) }}:
    - template: ../cli/cli-compile-and-publish.yml
      parameters:
        VSCODE_QUALITY: ${{ parameters.VSCODE_QUALITY }}
        VSCODE_CLI_TARGET: armv7-unknown-linux-gnueabihf
        VSCODE_CLI_ARTIFACT: vscode_cli_linux_armhf_cli
        VSCODE_CHECK_ONLY: ${{ parameters.VSCODE_CHECK_ONLY }}
        VSCODE_CLI_ENV:
          CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER: arm-linux-gnueabihf-gcc
          OPENSSL_LIB_DIR: $(Build.ArtifactStagingDirectory)/openssl/arm-linux/lib
          OPENSSL_INCLUDE_DIR: $(Build.ArtifactStagingDirectory)/openssl/arm-linux/include
