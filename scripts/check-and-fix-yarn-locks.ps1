# PowerShell script to check for missing yarn.lock files in extensions and create them
# Usage: .\scripts\check-and-fix-yarn-locks.ps1

Write-Host "Checking for missing yarn.lock files in extensions..." -ForegroundColor Yellow

# Function to check for missing yarn.lock files
function Check-MissingYarnLocks {
    Write-Host "`nChecking for missing yarn.lock files:" -ForegroundColor Cyan
    $missingCount = 0

    Get-ChildItem -Path "extensions" -Directory | ForEach-Object {
        $extensionPath = $_.FullName
        $packageJsonPath = Join-Path $extensionPath "package.json"
        $yarnLockPath = Join-Path $extensionPath "yarn.lock"

        if (Test-Path $packageJsonPath) {
            if (-not (Test-Path $yarnLockPath)) {
                Write-Host "Missing yarn.lock: $($_.Name)" -ForegroundColor Red
                $missingCount++
            }
        }
    }

    if ($missingCount -eq 0) {
        Write-Host "✓ All extensions with package.json have yarn.lock files" -ForegroundColor Green
    } else {
        Write-Host "Found $missingCount extensions missing yarn.lock files" -ForegroundColor Red
    }

    return $missingCount
}

# Function to create missing yarn.lock files
function Create-MissingYarnLocks {
    Write-Host "`nCreating missing yarn.lock files:" -ForegroundColor Cyan
    $createdCount = 0

    # Minimal valid yarn.lock content
    $yarnLockContent = @"
# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
# yarn lockfile v1


"@

    Get-ChildItem -Path "extensions" -Directory | ForEach-Object {
        $extensionPath = $_.FullName
        $packageJsonPath = Join-Path $extensionPath "package.json"
        $yarnLockPath = Join-Path $extensionPath "yarn.lock"

        if (Test-Path $packageJsonPath) {
            if (-not (Test-Path $yarnLockPath)) {
                try {
                    Set-Content -Path $yarnLockPath -Value $yarnLockContent -Encoding UTF8
                    Write-Host "✓ Created yarn.lock for: $($_.Name)" -ForegroundColor Green
                    $createdCount++
                } catch {
                    Write-Host "✗ Failed to create yarn.lock for: $($_.Name) - $($_.Exception.Message)" -ForegroundColor Red
                }
            }
        }
    }

    Write-Host "Created $createdCount yarn.lock files" -ForegroundColor Green
}

# Main execution
$missingCount = Check-MissingYarnLocks

if ($missingCount -gt 0) {
    Write-Host "`nDo you want to create the missing yarn.lock files? (y/n): " -ForegroundColor Yellow -NoNewline
    $response = Read-Host

    if ($response -eq 'y' -or $response -eq 'Y' -or $response -eq 'yes' -or $response -eq 'Yes') {
        Create-MissingYarnLocks
        Write-Host "`nRechecking..." -ForegroundColor Yellow
        Check-MissingYarnLocks | Out-Null
    } else {
        Write-Host "Skipped creating yarn.lock files" -ForegroundColor Yellow
    }
} else {
    Write-Host "`nNo action needed." -ForegroundColor Green
}

Write-Host "`nScript completed." -ForegroundColor Green
