{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"dist/askpass-main": {
			"missOrInvalid": "Fehlende oder ungültige Anmeldeinformationen."
		},
		"dist/autofetch": {
			"no": "Nein",
			"not now": "Erneut nachfragen",
			"suggest auto fetch": "Möchten Sie Code [regelmäßig \"git fetch\" ausführen lassen]({0})?",
			"yes": "Ja"
		},
		"dist/commands": {
			"HEAD not available": "Es ist keine HEAD-Version von \"{0}\" verfügbar.",
			"add": "Zum Arbeitsbereich hinzufügen",
			"add remote": "Neues Remoterepository hinzufügen...",
			"addFrom": "Remoterepository aus URL hinzufügen",
			"addfrom": "Remoterepository aus {0} hinzufügen",
			"addremote": "Remoterepository hinzufügen",
			"always": "Immer",
			"are you sure": "Erstellt ein Git-Repository unter '{0}'. Sind Sie sicher das Sie weiterfahren möchten?",
			"auth failed": "Fehler bei der Authentifizierung beim Git-Remoterepository.",
			"auth failed specific": "Fehler bei der Authentifizierung beim Git-Remoterepository:\r\n\r\n{0}",
			"branch already exists": "Ein Branch namens \"{0}\" bereits vorhanden.",
			"branch name": "Branchname",
			"branch name format invalid": "Der Name des Branches muss mit RegEx übereinstimmen: {0}",
			"cant push": "Verweise können nicht per Push an einen Remotespeicherort übertragen werden. Führen Sie zuerst \"Pull\" aus, um Ihre Änderungen zu integrieren.",
			"changed": "Protokollebene geändert in: {0}",
			"checkout detached": "Getrennte auschecken...",
			"choose": "Ordner auswählen...",
			"clean repo": "Bereinigen Sie Ihre Repository-Arbeitsstruktur vor Auftragsabschluss.",
			"clonefrom": "Aus \"{0}\" klonen",
			"cloning": "Das Git-Repository \"{0}\" wird geklont ...",
			"commit": "Gestagete Änderungen committen",
			"commit anyway": "Leeren Commit erstellen",
			"commit hash": "Commithash",
			"commit message": "Commit-Nachricht",
			"commitMessageWithHeadLabel2": "Nachricht (Commit für \"{0}\")",
			"confirm delete": "Möchten Sie \"{0}\" LÖSCHEN?\r\nDieser Vorgang ist UNUMKEHRBAR!\r\nWenn Sie fortfahren, geht die Datei DAUERHAFT VERLOREN.",
			"confirm delete multiple": "Möchten Sie {0} Dateien LÖSCHEN?\r\nDieser Vorgang ist UNUMKEHRBAR!\r\nWenn Sie fortfahren, gehen diese Dateien DAUERHAFT VERLOREN.",
			"confirm discard": "Möchten Sie die Änderungen in {0} wirklich verwerfen?",
			"confirm discard all": "Möchten Sie ALLE Änderungen in {0} Dateien verwerfen?\r\nDieser Vorgang ist UNUMKEHRBAR!\r\nWenn Sie fortfahren, geht Ihr aktueller Arbeitssatz DAUERHAFT VERLOREN.",
			"confirm discard all 2": "{0}\r\n\r\nDies kann NICHT rückgängig gemacht werden, und Ihr aktueller Arbeitssatz geht DAUERHAFT verloren.",
			"confirm discard all single": "Möchten Sie die Änderungen in {0} wirklich verwerfen?",
			"confirm discard multiple": "Möchten Sie wirklich Änderungen in {0} Dateien verwerfen?",
			"confirm emtpy commit": "Möchten Sie wirklich einen leeren Commit erstellen?",
			"confirm force delete branch": "Der Branch '{0}' ist noch nicht vollständig zusammengeführt. Trotzdem löschen?",
			"confirm force push": "Sie sind dabei, einen erzwungenen Push für Ihre Änderungen durchzuführen. Dieser Vorgang kann negative Auswirkungen haben und die Änderungen anderer Benutzer überschreiben.\r\n\r\nMöchten Sie fortfahren?",
			"confirm no verify commit": "Sie sind im Begriff, Ihre Änderungen ohne Überprüfung zu commiten. Hierdurch werden pre-commit-Hooks übersprungen, was möglicherweise nicht erwünscht ist.\r\n\r\nMöchten Sie den Vorgang fortsetzen?",
			"confirm publish branch": "Der Branch \"{0}\" verfügt über keinen Upstreambranch. Möchten Sie diesen Branch veröffentlichen?",
			"confirm restore": "Möchten Sie {0} wirklich wiederherstellen?",
			"confirm restore multiple": "Möchten Sie {0} Dateien wirklich wiederherstellen?",
			"confirm stage file with merge conflicts": "Möchten Sie {0} mit Mergingkonflikten bereitstellen?",
			"confirm stage files with merge conflicts": "Möchten Sie {0} Dateien mit Mergingkonflikten bereitstellen?",
			"create branch": "Neuen Branch erstellen...",
			"create branch from": "Neuen Branch erstellen aus...",
			"create repo": "Repository initialisieren",
			"current": "Aktuell",
			"delete": "Datei löschen",
			"delete branch": "Branch löschen",
			"delete file": "Datei löschen",
			"delete files": "Dateien löschen",
			"deleted by them": "Die Datei \"{0}\" wurde von Dritten gelöscht und von uns geändert.\r\n\r\nWas möchten Sie tun?",
			"deleted by us": "Die Datei \"{0}\" wurde von uns gelöscht und von Dritten geändert.\r\n\r\nWas möchten Sie tun?",
			"discard": "Änderungen verwerfen",
			"discardAll": "Alle {0} Dateien verwerfen",
			"discardAll multiple": "Eine Datei verwerfen",
			"force": "Auschecken erzwingen",
			"force push not allowed": "Erzwungene Pushes sind nicht zulässig. Aktivieren Sie diese bitte über die Einstellung \"git.allowForcePush\".",
			"git error": "Git-Fehler",
			"git error details": "Git: {0}",
			"git.title.diff": "{0} ⟷ {1}",
			"git.title.diffRefs": "{0} ({1}) ⟷ {0} ({2})",
			"git.title.index": "{0} (Index)",
			"git.title.ref": "{0} ({1})",
			"git.title.workingTree": "{0} (Arbeitsstruktur)",
			"init": "Arbeitsbereichsordner auswählen, in dem das Git-Repository initialisiert wird",
			"init repo": "Repository initialisieren",
			"invalid branch name": "Ungültiger Branchname",
			"keep ours": "Unsere Version beibehalten",
			"keep theirs": "Deren Version beibehalten",
			"learn more": "Weitere Informationen",
			"local changes": "Ihre lokalen Änderungen werden durch Auschecken überschrieben.",
			"merge commit": "Der letzte Commit war ein Mergecommit. Möchten Sie den Vorgang wirklich rückgängig machen?",
			"merge conflicts": "Es liegen Zusammenführungskonflikte vor. Beheben Sie die Konflikte vor dem Committen.",
			"missing user info": "Stellen Sie sicher, dass Sie in git Ihren „user.name“ und Ihre „user.email“ konfigurieren.",
			"never": "Nie",
			"never again": "OK, nicht mehr anzeigen",
			"never ask again": "OK, nicht mehr fragen",
			"no changes": "Keine Änderungen zum Speichern vorhanden.",
			"no changes stash": "Es sind keine Änderungen vorhanden, für die ein Stash ausgeführt werden kann.",
			"no more": "Die Aktion kann nicht rückgängig gemacht werden, da HEAD nicht auf einen Commit verweist.",
			"no rebase": "Es wird kein Rebase ausgeführt.",
			"no remotes added": "In Ihrem Repository liegen keine Remoteelemente vor.",
			"no remotes to fetch": "In diesem Repository wurden keine Remoteelemente konfiguriert, aus denen ein Abrufen erfolgt.",
			"no remotes to publish": "In Ihrem Repository wurden keine Remoteelemente für die Veröffentlichung konfiguriert.",
			"no remotes to pull": "In Ihrem Repository wurden keine Remoteelemente für den Pull konfiguriert.",
			"no remotes to push": "In Ihrem Repository wurden keine Remoteelemente für den Push konfiguriert.",
			"no staged changes": "Es sind keine gestageten Änderungen vorhanden, für die ein Commit durchgeführt werden kann.\r\n\r\nMöchten Sie all Ihre Änderungen stagen und direkt committen?",
			"no stashes": "Das Repository enthält keine Stashes.",
			"no tags": "Dieses Repository hat keine Tags.",
			"no verify commit not allowed": "Commits ohne Überprüfung sind nicht zulässig, aktivieren Sie sie mit der Einstellung \"git.allowNoVerifyCommit\".",
			"nobranch": "Wählen Sie ein Branch für den Push zu einem Remoteelement aus.",
			"ok": "OK",
			"open git log": "Git-Protokoll öffnen",
			"open repo": "Repository öffnen",
			"openrepo": "Öffnen",
			"openreponew": "In neuem Fenster öffnen",
			"pick branch pull": "Branch für Pull auswählen",
			"pick provider": "Wählen Sie einen Anbieter aus, um den Branch \"{0}\" hier zu veröffentlichen:",
			"pick remote": "Remotespeicherort auswählen, an dem der Branch \"{0}\" veröffentlicht wird:",
			"pick remote pull repo": "Remoteelement zum Pullen des Branch auswählen",
			"pick stash to apply": "Stash zum Anwenden auswählen",
			"pick stash to drop": "Zu löschenden Stash auswählen",
			"pick stash to pop": "Wählen Sie einen Stash aus, für den ein Pop ausgeführt werden soll.",
			"proposeopen": "Möchten Sie das geklonte Repository öffnen?",
			"proposeopen init": "Möchten Sie das initialisierte Repository öffnen?",
			"proposeopen2": "Möchten Sie das geklonte Repository öffnen oder es zum aktuellen Arbeitsbereich hinzufügen?",
			"proposeopen2 init": "Möchten Sie das initialisierte Repository öffnen oder es zum aktuellen Arbeitsbereich hinzufügen?",
			"provide branch name": "Bitte geben Sie einen neuen Branchnamen an.",
			"provide commit hash": "Geben Sie den Commithash an.",
			"provide commit message": "Geben Sie eine Commit-Nachrichte ein.",
			"provide remote name": "Remotenamen angeben",
			"provide stash message": "Geben Sie optional eine Stash-Nachricht ein.",
			"provide tag message": "Geben Sie eine Meldung ein, um das Tag mit einer Anmerkung zu versehen.",
			"provide tag name": "Geben Sie einen Tagnamen an.",
			"publish to": "In \"{0}\" veröffentlichen",
			"remote already exists": "Remote-'{0}' ist bereits vorhanden.",
			"remote branch at": "Remotebranch unter {0}",
			"remote name": "Remotename",
			"remote name format invalid": "Ungültiges Format des Remotenamens",
			"remove remote": "Remote zum Entfernen auswählen",
			"repourl": "Repository-URL",
			"restore file": "Datei wiederherstellen",
			"restore files": "Dateien wiederherstellen",
			"save and commit": "Alle speichern & committen",
			"save and stash": "Alle speichern und stashen",
			"select a branch to merge from": "Branch für die Zusammenführung auswählen",
			"select a branch to rebase onto": "Branch für Rebase auswählen",
			"select a ref to checkout": "Referenz zum Auschecken auswählen",
			"select a ref to checkout detached": "Referenz zum Auschecken im getrennten Modus auswählen",
			"select a ref to create a new branch from": "Verweis auswählen, aus dem der Branch \"{0}\" erstellt werden soll",
			"select a tag to delete": "Zu löschendes Tag auswählen",
			"select branch to delete": "Wählen Sie einen Branch zum Löschen aus",
			"select log level": "Protokollstufe auswählen",
			"selectFolder": "Repositoryspeicherort auswählen",
			"show command output": "Befehlsausgabe anzeigen",
			"stash": "Dennoch stashen",
			"stash merge conflicts": "Beim Anwenden des Stashes sind Merge-Konflikte aufgetreten.",
			"stash message": "Stash-Nachricht",
			"stashcheckout": "Stashen und auschecken",
			"sure drop": "Möchten Sie den folgenden Stash löschen: {0}?",
			"sync is unpredictable": "Durch diese Aktion werden Commits per Push in bzw. per Pull aus \"{0}/{1}\" übertragen.",
			"tag at": "Tag bei {0}",
			"tag message": "Nachricht",
			"tag name": "Tag-Name",
			"there are untracked files": "Es sind {0} nicht verfolgte Dateien vorhanden, die VOM DATENTRÄGER GELÖSCHT werden, wenn sie verworfen werden.",
			"there are untracked files single": "Die folgende nicht verfolgte Datei wird VOM DATENTRÄGER GELÖSCHT, wenn sie verworfen wird: {0}.",
			"undo commit": "Mergecommit rückgängig machen",
			"unsaved files": "{0} Dateien wurden nicht gespeichert.\r\n\r\nMöchten Sie diese vor dem Ausführen des Commits speichern?",
			"unsaved files single": "Die folgende Datei umfasst noch nicht gespeicherte Änderungen, die beim Fortsetzen des Vorgangs nicht in den Commit einbezogen werden: {0}.\r\n\r\nMöchten Sie vor dem Commit speichern?",
			"unsaved stash files": "{0} Dateien wurden nicht gespeichert.\r\n\r\nMöchten Sie diese vor dem Stashen speichern?",
			"unsaved stash files single": "Die folgende Datei umfasst nicht gespeicherte Änderungen, die beim Fortsetzen des Vorgangs nicht in den Stash einbezogen werden: {0}.\r\n\r\nMöchten Sie sie vor dem Stashen speichern?",
			"warn untracked": "Hierdurch werden {0} nicht nachverfolgte Dateien GELÖSCHT!\r\nDieser Vorgang ist UNUMKEHRBAR.\r\nDie Dateien gehen DAUERHAFT VERLOREN.",
			"yes": "Ja",
			"yes discard tracked": "1 verfolgte Datei verwerfen",
			"yes discard tracked multiple": "{0} verfolgte Dateien verwerfen",
			"yes never again": "Ja, nicht mehr anzeigen"
		},
		"dist/main": {
			"downloadgit": "Git herunterladen",
			"git20": "Sie haben anscheinend Git {0} installiert. Der Code funktioniert am besten mit Git >= 2",
			"git2526": "Bei der installierten Git-Version {0} sind bekannte Issues aufgetreten. Aktualisieren Sie auf eine Git-Version >= 2.27, damit die Git-Features ordnungsgemäß funktionieren.",
			"looking": "Suchen nach Git in: {0}",
			"neverShowAgain": "Nicht mehr anzeigen",
			"notfound": "Git nicht gefunden. Installieren Sie es, oder konfigurieren Sie es mithilfe der Einstellung \"git.path\".",
			"updateGit": "Git aktualisieren",
			"using git": "Verwenden von Git {0} von {1}"
		},
		"dist/model": {
			"no repositories": "Es sind keine verfügbaren Repositorys vorhanden.",
			"not supported": "Absolute Pfade werden in der Einstellung \"git.canRepositories\" nicht unterstützt.",
			"pick repo": "Repository auswählen",
			"too many submodules": "Das Repository \"{0}\" enthält {1} Submodule, die nicht automatisch geöffnet werden. Sie könne Sie einzeln öffnen, indem Sie darin erhaltene Datei öffnen."
		},
		"dist/remoteSource": {
			"branch name": "Branchname",
			"error": "$(error) Fehler: {0}",
			"none found": "Keine Remoterepositorys gefunden.",
			"pick url": "Wählen Sie eine URL für den Klonvorgang aus.",
			"provide url": "Repository-URL angeben",
			"provide url or pick": "Geben Sie die Repository-URL an, oder wählen Sie eine Repositoryquelle aus.",
			"type to filter": "Repositoryname",
			"type to search": "Repositoryname (zur Suche eingeben)",
			"url": "URL"
		},
		"dist/repository": {
			"add known": "Möchten Sie \"{0}\" zu .gitignore hinzufügen?",
			"added by them": "Konflikt: von Anderen hinzugefügt",
			"added by us": "Konflikt: von uns hinzugefügt",
			"always pull": "Immer pullen",
			"both added": "Konflikt: beide hinzugefügt",
			"both deleted": "Konflikt: beide gelöscht",
			"both modified": "Konflikt: beide geändert",
			"changes": "Änderungen",
			"commit": "Commit",
			"commit in rebase": "Die Commit-Nachricht kann während der Rebase-Ausführung nicht geändert werden. Verwenden Sie stattdessen den interaktiven Rebase-Vorgang und schließen Sie die Rebase-Ausführung ab.",
			"commitMessage": "Nachricht ({0} für Commit)",
			"commitMessageCountdown": "{0} Zeichen in der aktuellen Zeile verbleibend",
			"commitMessageWarning": "{0} Zeichen über {1} in der aktuellen Zeile",
			"commitMessageWhitespacesOnlyWarning": "Die aktuelle Commitnachricht enthält nur Leerzeichen.",
			"commitMessageWithHeadLabel": "Nachricht ({0} für Commit in \"{1}\")",
			"deleted": "Gelöscht",
			"deleted by them": "Konflikt: von Anderen gelöscht",
			"deleted by us": "Konflikt: von uns gelöscht",
			"dont pull": "Nicht pullen",
			"git.title.deleted": "{0} (gelöscht)",
			"git.title.index": "{0} (Index)",
			"git.title.ours": "{0} (unseres)",
			"git.title.theirs": "{0} (ihres)",
			"git.title.untracked": "{0} (keine Nachverfolgung)",
			"git.title.workingTree": "{0} (Arbeitsstruktur)",
			"huge": "Das Git-Repository unter {0} umfasst zu viele aktive Änderungen. Nur ein Teil der Git-Features wird aktiviert.",
			"ignored": "Ignoriert",
			"index added": "Index hinzugefügt",
			"index copied": "Index kopiert",
			"index deleted": "Index gelöscht",
			"index modified": "Index geändert",
			"index renamed": "Index umbenannt",
			"intent to add": "Hinzuzufügende Absicht",
			"merge changes": "Änderungen zusammenführen",
			"modified": "Geändert",
			"neveragain": "Nicht mehr anzeigen",
			"open": "Öffnen",
			"pull": "Pull",
			"pull branch maybe rebased": "Offenbar wurde für den aktuellen Branch (\"{0}\") ein Rebase ausgeführt. Möchten Sie ihn dennoch als Ziel für den Pullvorgang verwenden?",
			"pull maybe rebased": "Offenbar wurde für den aktuellen Branch ein Rebase ausgeführt. Möchten Sie ihn dennoch als Ziel für den Pullvorgang verwenden?",
			"pull n": "{0} Commits aus {1}/{2} per Pull übertragen",
			"pull push n": "{0} Commits per Pull und {1} Commits per Push zwischen {2}/{3} übertragen",
			"push n": "{0} Commits per Push nach {1}/{2} übertragen",
			"push success": "Push wurde erfolgreich ausgeführt.",
			"staged changes": "Gestagete Änderungen",
			"sync changes": "6Änderungen synchronisieren",
			"sync is unpredictable": "Synchronisierung wird durchgeführt. Das Abbrechen des Vorgangs kann zu schweren Schäden am Repository führen.",
			"untracked": "Nicht verfolgt",
			"untracked changes": "Nicht nachverfolgte Änderungen",
			"yes": "Ja"
		},
		"dist/statusbar": {
			"checkout": "Branch/Tag auschecken...",
			"publish changes": "Änderungen veröffentlichen",
			"publish to": "In \"{0}\" veröffentlichen",
			"publish to...": "Veröffentlichen in...",
			"rebasing": "Rebase wird ausgeführt",
			"syncing changes": "Änderungen werden synchronisiert..."
		},
		"dist/timelineProvider": {
			"git.index": "Index",
			"git.timeline.detail": "{0}  – {1}\r\n{2}\r\n\r\n{3}",
			"git.timeline.source": "Git-Verlauf",
			"git.timeline.stagedChanges": "Gestagete Änderungen",
			"git.timeline.uncommitedChanges": "Ausgecheckte Änderungen",
			"git.timeline.you": "Sie",
			"git.workingTree": "Arbeitsstruktur"
		},
		"package": {
			"colors.added": "Farbe für hinzugefügte Ressourcen.",
			"colors.conflict": "Farbe für Ressourcen mit Konflikten.",
			"colors.deleted": "Farbe für gelöschte Ressourcen.",
			"colors.ignored": "Farbe für ignorierte Ressourcen.",
			"colors.modified": "Farbe für geänderte Ressourcen.",
			"colors.renamed": "Farbe für umbenannte oder kopierte Ressourcen.",
			"colors.stageDeleted": "Farbe für gelöschte Ressourcen, die gestaget wurden.",
			"colors.stageModified": "Farbe für geänderte Ressourcen, die gestaget wurden.",
			"colors.submodule": "Farbe für Submodul-Ressourcen.",
			"colors.untracked": "Farbe für nicht verfolgte Ressourcen.",
			"command.addRemote": "Remoterepository hinzufügen...",
			"command.branch": "Branch wird erstellt...",
			"command.branchFrom": "Branch erstellen aus...",
			"command.checkout": "Auschecken an...",
			"command.checkoutDetached": "Auschecken an (getrennt)...",
			"command.cherryPick": "Cherry-Pick...",
			"command.clean": "Änderungen verwerfen",
			"command.cleanAll": "Alle Änderungen verwerfen",
			"command.cleanAllTracked": "Alle nachverfolgten Änderungen verwerfen",
			"command.cleanAllUntracked": "Alle nicht nachverfolgten Änderungen verwerfen",
			"command.clone": "Klonen",
			"command.cloneRecursive": "Klonen (rekursiv)",
			"command.close": "Repository schließen",
			"command.commit": "Commit",
			"command.commitAll": "Commit für alle ausführen",
			"command.commitAllAmend": "Commit für alle ausführen (Ändern)",
			"command.commitAllAmendNoVerify": "Alle committen (ändern, keine Überprüfung)",
			"command.commitAllNoVerify": "Alle committen (keine Überprüfung)",
			"command.commitAllSigned": "Alle committen (unterzeichnet)",
			"command.commitAllSignedNoVerify": "Alle committen (abgemeldet, keine Überprüfung)",
			"command.commitEmpty": "Leer committen",
			"command.commitEmptyNoVerify": "Commit leer (keine Überprüfung)",
			"command.commitNoVerify": "Commit ausführen (keine Überprüfung)",
			"command.commitStaged": "Gestagetes committen",
			"command.commitStagedAmend": "Gestagetes committen (Ändern)",
			"command.commitStagedAmendNoVerify": "Commit gestaget (ändern, keine Überprüfung)",
			"command.commitStagedNoVerify": "Commit gestaget (keine Überprüfung)",
			"command.commitStagedSigned": "Gestagetes committen (signiert)",
			"command.commitStagedSignedNoVerify": "Commit gestaget (abgemeldet, keine Überprüfung)",
			"command.createTag": "Tag erstellen",
			"command.deleteBranch": "Branch löschen...",
			"command.deleteTag": "Tag löschen",
			"command.fetch": "Abrufen",
			"command.fetchAll": "Von allen Remotes holen",
			"command.fetchPrune": "Abrufen (Prune)",
			"command.ignore": "Zu .gitignore hinzufügen",
			"command.init": "Repository initialisieren",
			"command.merge": "Branch zusammenführen...",
			"command.openAllChanges": "Alle Änderungen öffnen",
			"command.openChange": "Offene Änderungen",
			"command.openFile": "Datei öffnen",
			"command.openHEADFile": "Datei öffnen (HEAD)",
			"command.openRepository": "Repository öffnen",
			"command.publish": "Branch veröffentlichen...",
			"command.pull": "Pull",
			"command.pullFrom": "Pullen von...",
			"command.pullRebase": "Pull (Rebase)",
			"command.push": "Push",
			"command.pushFollowTags": "Push (Tags folgen)",
			"command.pushFollowTagsForce": "Push (Tags folgen, Erzwingen)",
			"command.pushForce": "Push (Erzwingen)",
			"command.pushTags": "Tags pushen",
			"command.pushTo": "Push zu...",
			"command.pushToForce": "Push zu... (Erzwingen)",
			"command.rebase": "Rebase für Branch ausführen...",
			"command.rebaseAbort": "Rebase abbrechen",
			"command.refresh": "Aktualisieren",
			"command.removeRemote": "Remote entfernen",
			"command.rename": "Umbenennen",
			"command.renameBranch": "Branch umbenennen...",
			"command.restoreCommitTemplate": "Commitvorlage wiederherstellen",
			"command.revealInExplorer": "In Seitenleiste anzeigen",
			"command.revertChange": "Änderung zurücksetzen",
			"command.revertSelectedRanges": "Ausgewählte Bereiche zurücksetzen",
			"command.setLogLevel": "Protokollstufe festlegen...",
			"command.showOutput": "Git-Ausgabe anzeigen",
			"command.stage": "Änderungen bereitstellen",
			"command.stageAll": "Alle Änderungen bereitstellen",
			"command.stageAllMerge": "Alle zusammengeführten Änderungen stagen",
			"command.stageAllTracked": "Alle nachverfolgten Änderungen bereitstellen",
			"command.stageAllUntracked": "Alle nicht nachverfolgten Änderungen bereitstellen",
			"command.stageChange": "Änderung bereitstellen",
			"command.stageSelectedRanges": "Gewählte Bereiche staffeln",
			"command.stash": "Stash ausführen",
			"command.stashApply": "Stash anwenden...",
			"command.stashApplyLatest": "Neuesten Stash anwenden",
			"command.stashDrop": "Stash löschen...",
			"command.stashIncludeUntracked": "Stash (einschließlich nicht verfolgt)",
			"command.stashPop": "Pop für Stash ausführen...",
			"command.stashPopLatest": "Pop für letzten Stash ausführen",
			"command.sync": "Synchronisierung",
			"command.syncRebase": "Sync (Rebase)",
			"command.timelineCompareWithSelected": "Mit Auswahl vergleichen",
			"command.timelineCopyCommitId": "Commit-ID kopieren",
			"command.timelineCopyCommitMessage": "Commitnachricht kopieren",
			"command.timelineOpenDiff": "Offene Änderungen",
			"command.timelineSelectForCompare": "Für Vergleich auswählen",
			"command.undoCommit": "Letzten Commit rückgängig machen",
			"command.unstage": "Bereitstellung der Änderungen aufheben",
			"command.unstageAll": "Bereitstellung aller Änderungen aufheben",
			"command.unstageSelectedRanges": "Bereitstellung gewählter Bereiche aufheben",
			"config.allowForcePush": "Steuert, ob erzwungene Pushes (mit oder ohne Lease) aktiviert sind.",
			"config.allowNoVerifyCommit": "Hiermit wird gesteuert, ob Commits ohne Ausführung von pre-commit- und commit-msg-Hooks zulässig sind.",
			"config.alwaysShowStagedChangesResourceGroup": "Ressourcengruppe für gestagete Änderungen immer anzeigen.",
			"config.alwaysSignOff": "Legt das signoff-Flag für alle Commits fest.",
			"config.autoRepositoryDetection": "Legt fest, in welchen Fällen Repositorys automatisch erkannt werden sollen.",
			"config.autoRepositoryDetection.false": "Automatisches Durchsuchen von Repositorys deaktiveren.",
			"config.autoRepositoryDetection.openEditors": "Nach übergeordneten Ordnern von geöffneten Dateien suchen.",
			"config.autoRepositoryDetection.subFolders": "Nach Unterordnern des aktuell geöffneten Ordners suchen.",
			"config.autoRepositoryDetection.true": "Sowohl nach Unterordnern des aktuell geöffneten Ordners als auch nach übergeordneten Ordnern von geöffneten Dateien suchen.",
			"config.autoStash": "Führen Sie für Änderungen einen Stash aus, bevor Sie sie pullen, und stellen Sie sie nach einem erfolgreichen Pull wieder her.",
			"config.autofetch": "Bei Festlegung auf TRUE werden Commits automatisch aus dem Standardremoteverzeichnis des aktuellen Git-Repositorys abgerufen. Bei Festlegung auf \"Alle\" erfolgt der Abruf aus allen Remoteverzeichnissen.",
			"config.autofetchPeriod": "Dauer in Sekunden zwischen jeder automatischen Git-Abrufung, wenn \"#git.autofetch#\" aktiviert ist.",
			"config.autorefresh": "Gibt an, ob die automatische Aktualisierung aktiviert ist.",
			"config.branchSortOrder": "Steuert die Sortierreihenfolge für Branches.",
			"config.branchValidationRegex": "Regulärer Ausdruck zum Validieren neuer Branch-Namen.",
			"config.branchWhitespaceChar": "Zeichen, mit dem Leerzeichen im Namen neuer Branches ersetzt werden sollen.",
			"config.checkoutType": "Legt fest, welche Git-Referenzen aufgelistet werden, wenn \"Auschecken an...\" ausgeführt wird.",
			"config.checkoutType.local": "Lokale Branches",
			"config.checkoutType.remote": "Remotebranches",
			"config.checkoutType.tags": "Tags",
			"config.confirmEmptyCommits": "Bestätigen Sie die Erstellung leerer Commits für den Befehl \"Git: Commit Empty\" immer.",
			"config.confirmForcePush": "Steuert, ob der Benutzer vor einem erzwungenen Push zur Bestätigung aufgefordert wird.",
			"config.confirmNoVerifyCommit": "Hiermit wird gesteuert, ob ein Commit ohne Überprüfung bestätigt werden muss.",
			"config.confirmSync": "Vor dem Synchronisieren von Git-Repositorys bestätigen.",
			"config.countBadge": "Steuert den Git-Anzahlbadge.",
			"config.countBadge.all": "Alle Änderungen zählen.",
			"config.countBadge.off": "Zähler deaktivieren.",
			"config.countBadge.tracked": "Nur nachverfolgte Änderungen zählen.",
			"config.decorations.enabled": "Legt fest, ob Git Farben und Badges für die Explorer-Ansicht und die Ansicht \"Geöffnete Editoren\" bereitstellt.",
			"config.defaultCloneDirectory": "Das Standardspeicherort für einen Klon eines Git-Repositorys.",
			"config.detectSubmodules": "Steuert, ob Git-Submodule automatisch erkannt werden.",
			"config.detectSubmodulesLimit": "Steuert die Begrenzung der Git-Submodule.",
			"config.discardAllScope": "Legt fest, welche Änderungen vom Befehl \"Alle Änderungen verwerfen\" verworfen werden. \"all\" verwirft alle Änderungen. \"tracked\" verwirft nur verfolgte Dateien. \"prompt\" zeigt immer eine Eingabeaufforderung an, wenn die Aktion ausgeführt wird.",
			"config.enableCommitSigning": "Aktiviert die Commitsignierung mit GPG oder X.509.",
			"config.enableSmartCommit": "Alle Änderungen committen, wenn keine gestageten Änderungen vorhanden sind.",
			"config.enableStatusBarSync": "Steuert, ob der Git Sync-Befehl in der Statusleiste angezeigt wird.",
			"config.enabled": "Legt fest, ob Git aktiviert ist.",
			"config.fetchOnPull": "Wenn aktiviert, beim Pullen alle Branches abrufen. Andernfalls nur den aktuellen abrufen.",
			"config.followTagsWhenSync": "Führt einen Pushvorgang für alle Tags durch, wenn der Synchronisierungsbefehl ausgeführt wird.",
			"config.ignoreLegacyWarning": "Ignoriert die Legacy-Git-Warnung.",
			"config.ignoreLimitWarning": "Ignoriert die Warnung bei zu hoher Anzahl von Änderungen in einem Repository.",
			"config.ignoreMissingGitWarning": "Ignoriert die Warnung, wenn Git nicht vorhanden ist.",
			"config.ignoreRebaseWarning": "Ignoriert die Warnung beim Pullvorgang, wenn für den Branch möglicherweise ein Rebase ausgeführt wurde.",
			"config.ignoreSubmodules": "Ignoriert Änderungen an Untermodulen in der Dateistruktur.",
			"config.ignoreWindowsGit27Warning": "Ignoriert die Warnung, wenn Git 2.25–2.26 unter Windows installiert ist.",
			"config.ignoredRepositories": "Liste der zu ignorierenden Git-Repositorys.",
			"config.inputValidation": "Steuert, wann die Commit-Meldung der Eingabevalidierung angezeigt wird.",
			"config.inputValidationLength": "Steuert, ab welcher Länge für Commit-Nachrichten eine Warnung eingeblendet werden soll.",
			"config.inputValidationSubjectLength": "Legt den Grenzwert der Länge des Betreffs der Commitmeldung beim Anzeigen einer Warnung fest. Heben Sie die Festlegung auf, um den Wert von \"config.inputValidationLength\" zu erben.",
			"config.openAfterClone": "Steuert, ob ein Repository nach dem Klonen automatisch geöffnet wird.",
			"config.openAfterClone.always": "Öffnet Elemente immer im aktuellen Fenster.",
			"config.openAfterClone.alwaysNewWindow": "Öffnet Elemente immer in einem neuen Fenster.",
			"config.openAfterClone.prompt": "Fordert immer eine Aktion an.",
			"config.openAfterClone.whenNoFolderOpen": "Öffnet Elemente nur dann im aktuellen Fenster, wenn kein Ordner geöffnet ist.",
			"config.openDiffOnClick": "Steuert, ob der Diff-Editor geöffnet werden soll, wenn Sie auf eine Änderung klicken. Ansonsten wird der normale Editor geöffnet.",
			"config.path": "Der Pfad und der Dateiname der ausführbaren Git-Datei, beispielsweise \"C:\\Programme\\Git\\bin\\git.exe\" (Windows). Hierbei kann es sich auch um Array mit Zeichenfolgenwerten handeln, die mehrere Pfade für die Suche enthalten.",
			"config.postCommitCommand": "Führt einen Git-Befehl nach erfolgreichem Commit aus.",
			"config.postCommitCommand.none": "Führen Sie keinen Befehl nach einem Commit aus.",
			"config.postCommitCommand.push": "Führen Sie \"Git Push\" nach einem erfolgreichen Commit aus.",
			"config.postCommitCommand.sync": "Führen Sie \"Git Sync\" nach einem erfolgreichen Commit aus.",
			"config.promptToSaveFilesBeforeCommit": "Legt fest, ob Git vor dem einchecken nach nicht gespeicherten Dateien suchen soll.",
			"config.promptToSaveFilesBeforeCommit.always": "Hiermit prüfen Sie auf nicht gespeicherte Dateien.",
			"config.promptToSaveFilesBeforeCommit.never": "Hiermit wird diese Prüfung deaktiviert.",
			"config.promptToSaveFilesBeforeCommit.staged": "Hiermit prüfen Sie nur auf nicht gespeicherte gestagete Dateien.",
			"config.promptToSaveFilesBeforeStash": "Legt fest, ob Git vor dem Stashen von Änderungen nach nicht gespeicherten Dateien suchen soll.",
			"config.promptToSaveFilesBeforeStash.always": "Hiermit prüfen Sie auf nicht gespeicherte Dateien.",
			"config.promptToSaveFilesBeforeStash.never": "Deaktiviert diese Prüfung.",
			"config.promptToSaveFilesBeforeStash.staged": "Hiermit prüfen Sie nur auf nicht gespeicherte gestagete Dateien.",
			"config.pruneOnFetch": "Löscht Elemente beim Abrufen.",
			"config.pullTags": "Hiermit werden alle Tags beim Pullvorgang abgerufen.",
			"config.rebaseWhenSync": "Erzwingen, dass Git \"rebase\" verwendet, wenn der Synchronisierungsbefehl ausgeführt wird.",
			"config.requireGitUserConfig": "Steuert, ob eine explizite Git-Benutzerkonfiguration erforderlich ist oder ob Git Annahmen treffen soll, falls die Konfiguration fehlt.",
			"config.scanRepositories": "Liste mit Pfaden, an denen nach Git-Repositorys gesucht wird.",
			"config.showCommitInput": "Steuert, ob die Commiteingabe im Panel für die Git-Quellcodeverwaltung angezeigt wird.",
			"config.showInlineOpenFileAction": "Steuert, ob eine Inlineaktion zum Öffnen der Datei in der Ansicht \"Git-Änderungen\" angezeigt wird.",
			"config.showProgress": "Steuert, ob für Git-Aktionen der Fortschritt zu sehen ist.",
			"config.showPushSuccessNotification": "Legt fest, ob bei einem erfolgreichen Push eine Benachrichtigung angezeigt werden soll.",
			"config.smartCommitChanges": "Hiermit steuern Sie, welche Änderungen beim intelligenten Commit automatisch gestaget werden.",
			"config.smartCommitChanges.all": "Hiermit werden alle Änderungen automatisch gestaget.",
			"config.smartCommitChanges.tracked": "Es wurden nur nachverfolgte Änderungen automatisch gestaget.",
			"config.suggestSmartCommit": "Schlägt das Aktivieren intelligenter Commits vor. Dabei werden alle Änderungen committet, wenn keine gestageten Änderungen vorliegen.",
			"config.supportCancellation": "Steuert, ob bei Ausführung der Synchronisierungsaktion eine Benachrichtigung angezeigt wird, sodass der Benutzer den Vorgang abbrechen kann.",
			"config.terminalAuthentication": "Steuert, ob VS Code als Authentifizierungshandler für git-Prozesse aktiviert werden soll, die im integrierten Terminal erzeugt werden. Hinweis: Terminals müssen neu gestartet werden, damit eine Änderung dieser Einstellung wirksam wird.",
			"config.timeline.date": "Steuert, welches Datum für Elemente in der Zeitachsenansicht verwendet werden soll.",
			"config.timeline.date.authored": "Erstellungsdatum verwenden",
			"config.timeline.date.committed": "Commitdatum verwenden",
			"config.timeline.showAuthor": "Steuert, ob der Commitautor in der Zeitachsenansicht angezeigt wird.",
			"config.untrackedChanges": "Legt fest, wie sich nicht nachverfolgte Änderungen verhalten.",
			"config.untrackedChanges.hidden": "Nicht nachverfolgte Änderungen werden ausgeblendet und von mehreren Aktionen ausgeschlossen.",
			"config.untrackedChanges.mixed": "Alle Änderungen (nachverfolgte und nicht nachverfolgte) werden zusammen angezeigt und verhalten sich identisch.",
			"config.untrackedChanges.separate": "Nicht nachverfolgte Änderungen werden separat in der Quellcodeverwaltung angezeigt. Sie sind zudem von mehreren Aktionen ausgeschlossen.",
			"config.useCommitInputAsStashMessage": "Steuert, ob die Nachricht aus dem Commiteingabefeld als Standardstashnachricht verwendet wird.",
			"config.useForcePushWithLease": "Steuert, ob erzwungene Pushes die sicherere Variante mit Leases verwenden.",
			"description": "Git SCM-Integration",
			"displayName": "Git",
			"submenu.branch": "Branch",
			"submenu.changes": "Änderungen",
			"submenu.commit": "Commit",
			"submenu.commit.amend": "Korrigieren",
			"submenu.commit.signoff": "Abmelden",
			"submenu.explorer": "Git",
			"submenu.pullpush": "Pull, Push",
			"submenu.remotes": "Remote",
			"submenu.stash": "Stash ausführen",
			"submenu.tags": "Tags",
			"view.workbench.cloneRepository": "Sie können ein Repository lokal klonen.\r\n[Repository klonen](command:git.clone \"Clone a repository once the git extension has activated\")",
			"view.workbench.learnMore": "Weitere Informationen zur Verwendung von Git und Quellcodeverwaltung in VS Code [finden Sie in unserer Dokumentation](https://aka.ms/vscode-scm).",
			"view.workbench.scm.disabled": "Wenn Sie Git-Features verwenden möchten, müssen Sie Git in Ihren [Einstellungen](command:workbench.action.openSettings?%5B%22git.enabled%22%5D) aktivieren.\r\nWeitere Informationen zur Verwendung von Git und der Quellcodeverwaltung in VS Code [finden Sie in unserer Dokumentation](https://aka.ms/vscode-scm).",
			"view.workbench.scm.empty": "Zum Verwenden von Git-Features können Sie einen Ordner mit einem Git-Repository öffnen oder das Repository von einer URL klonen.\r\n[Ordner öffnen](command:vscode.openFolder)\r\n[Repository klonen](command:git.clone)\r\nWeitere Informationen zur Verwendung von Git und der Quellcodeverwaltung in VS Code [finden Sie in unserer Dokumentation](https://aka.ms/vscode-scm).",
			"view.workbench.scm.emptyWorkspace": "Der derzeit geöffnete Arbeitsbereich verfügt über keine Ordner, die Git-Repositorys enthalten.\r\n[Ordner zum Arbeitsbereich hinzufügen](command:workbench.action.addRootFolder)\r\nWeitere Informationen zur Verwendung von Git und der Quellcodeverwaltung in VS Code [finden Sie in unserer Dokumentation](https://aka.ms/vscode-scm).",
			"view.workbench.scm.folder": "Der aktuell geöffnete Ordner enthält kein Git-Repository. Sie können ein Repository initialisieren, wodurch die Git-Features zur Quellcodeverwaltung aktiviert werden.\r\n[Repository initialisieren](command:git.init?%5Btrue%5D)\r\nWeitere Informationen zur Verwendung von Git und der Quellcodeverwaltung in VS Code finden Sie in unserer [Dokumentation](https://aka.ms/vscode-scm).",
			"view.workbench.scm.missing": "Eine gültige Git-Installation wurde nicht erkannt. Weitere Details finden Sie in der [Git-Ausgabe](command:git.showOutput).\r\nBitte [installieren Sie Git](https://git-scm.com/), oder informieren Sie sich in [unserer Dokumentation](https://aka.ms/vscode-scm) darüber, wie Sie Git und die Quellcodeverwaltung in VS Code verwenden.\r\nWenn Sie ein anderes Versionskontrollsystem verwenden, können Sie [im Marketplace](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22) nach zusätzlichen Erweiterungen suchen.",
			"view.workbench.scm.workspace": "Der aktuell geöffnete Arbeitsbereich enthält keine Ordner mit Git-Repositorys. Sie können ein Repository für einen Ordner initialisieren, wodurch die Git-Features zur Quellcodeverwaltung aktiviert werden.\r\n[Repository initialisieren](command:git.init)\r\nWeitere Informationen zur Verwendung von Git und der Quellcodeverwaltung in VS Code finden Sie in unserer [Dokumentation](https://aka.ms/vscode-scm)."
		}
	}
}