{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"dist/askpass-main": {
			"missOrInvalid": "자격 증명이 없거나 잘못되었습니다."
		},
		"dist/autofetch": {
			"no": "아니요",
			"not now": "나중에 물어보기",
			"suggest auto fetch": "Code에서 ['git fetch']({0})를 정기적으로 실행하도록 하시겠습니까?",
			"yes": "예"
		},
		"dist/commands": {
			"HEAD not available": "'{0}'의 HEAD 버전이 없습니다.",
			"add": "작업 영역에 추가",
			"add remote": "새 원격 추가...",
			"addFrom": "URL에서 원격 추가",
			"addfrom": "{0}에서 원격 추가",
			"addremote": "원격 추가",
			"always": "항상",
			"are you sure": "'{0}'에서 Git 리포지토리가 만들어집니다. 계속하시겠습니까?",
			"auth failed": "git remote에 인증하지 못했습니다.",
			"auth failed specific": "git remote에 인증하지 못했습니다.\r\n\r\n{0}",
			"branch already exists": "이름이 '{0}'인 분기가 이미 있습니다.",
			"branch name": "분기 이름",
			"branch name format invalid": "분기 이름은 regex {0}과(와) 일치해야 합니다.",
			"cant push": "참조를 원격에 푸시할 수 없습니다. 먼저 '풀'을 실행하여 변경 내용을 통합하세요.",
			"changed": "로그 수준이 {0}(으)로 변경되었습니다.",
			"checkout detached": "체크 아웃 분리됨...",
			"choose": "폴더 선택...",
			"clean repo": "체크 아웃하기 전에 리포지토리 작업 트리를 정리하세요.",
			"clonefrom": "{0}에서 복제",
			"cloning": "Git 리포지토리 '{0}'을(를) 복제하는 중...",
			"commit": "스테이징된 변경 사항 커밋",
			"commit anyway": "빈 커밋 만들기",
			"commit hash": "커밋 해시",
			"commit message": "커밋 메시지",
			"commitMessageWithHeadLabel2": "메시지('{0}'에서 커밋)",
			"confirm delete": "{0}을(를) 삭제하시겠습니까?\r\n이 작업은 취소할 수 없습니다!\r\n계속하면 이 파일이 영구적으로 손실됩니다.",
			"confirm delete multiple": "파일 {0}개를 삭제하시겠습니까?\r\n이 작업은 취소할 수 없습니다!\r\n계속하면 해당 파일이 영구적으로 손실됩니다.",
			"confirm discard": "{0}의 변경 내용을 취소하시겠습니까?",
			"confirm discard all": "파일 {0}개의 변경 내용을 모두 취소하시겠습니까?\r\n이 작업은 취소할 수 없습니다!\r\n계속하면 현재 작업 집합이 영구적으로 손실됩니다.",
			"confirm discard all 2": "{0}\r\n\r\n이 작업은 되돌릴 수 없으며, 현재 작업 설정이 영구적으로 손실됩니다.",
			"confirm discard all single": "{0}의 변경 내용을 취소하시겠습니까?",
			"confirm discard multiple": "{0}개 파일의 변경 내용을 취소하시겠습니까?",
			"confirm emtpy commit": "빈 커밋을 만드시겠습니까?",
			"confirm force delete branch": "'{0}' 분기가 완벽히 병합되지 않았습니다. 그래도 삭제할까요?",
			"confirm force push": "변경 내용을 강제로 푸시하려고 합니다. 이렇게 하면 다른 사람의 변경 내용을 무시하거나 의도하지 않게 덮어쓸 수 있습니다.\r\n\r\n계속하시겠습니까?",
			"confirm no verify commit": "확인 없이 변경 내용을 커밋하려고 합니다. 그러면 pre-commit 후크를 건너뛰고 바람직하지 않을 수 있습니다.\r\n\r\n계속하시겠습니까?",
			"confirm publish branch": "'{0}' 분기에는 상향 분기가 없습니다. 이 분기를 게시하시겠습니까?",
			"confirm restore": "{0}을(를) 복원하시겠습니까?",
			"confirm restore multiple": "{0}개 파일을 복원하겠습니까?",
			"confirm stage file with merge conflicts": "병합 충돌이 있는 {0}을(를) 스테이징하시겠습니까?",
			"confirm stage files with merge conflicts": "병합 충돌이 있는 {0} 파일을 스테이징하시겠습니까?",
			"create branch": "새 분기 만들기...",
			"create branch from": "에서 새 분기 만들기...",
			"create repo": "리포지토리 초기화",
			"current": "현재",
			"delete": "파일 삭제",
			"delete branch": "분기 삭제",
			"delete file": "파일 삭제",
			"delete files": "파일 삭제",
			"deleted by them": "타인이 '{0}' 파일을 삭제하고 본인이 수정했습니다.\r\n\r\n수행하고 싶은 작업을 선택하세요.",
			"deleted by us": "본인이 '{0}' 파일을 삭제하고 타인이 수정했습니다.\r\n\r\n수행하고 싶은 작업을 선택하세요.",
			"discard": "변경 내용 취소",
			"discardAll": "{0}개 파일 모두 버리기",
			"discardAll multiple": "1개 파일 취소",
			"force": "강제 체크 아웃",
			"force push not allowed": "강제 푸시가 허용되지 않습니다. 'git.allowForcePush' 설정으로 사용하도록 설정하세요.",
			"git error": "Git 오류",
			"git error details": "Git: {0}",
			"git.title.diff": "{0} ⟷ {1}",
			"git.title.diffRefs": "{0}({1}) ⟷ {0}({2})",
			"git.title.index": "{0}(인덱스)",
			"git.title.ref": "{0} ({1})",
			"git.title.workingTree": "{0}(작업 트리)",
			"init": "Git 리포지토리를 초기화할 작업 영역 폴더 선택",
			"init repo": "리포지토리 초기화",
			"invalid branch name": "잘못된 분기 이름",
			"keep ours": "현재 버전 유지",
			"keep theirs": "다른 사용자 버전 유지",
			"learn more": "자세한 정보",
			"local changes": "체크 아웃하면 로컬 변경 내용을 덮어씁니다.",
			"merge commit": "마지막 커밋은 병합 커밋이었습니다. 실행 취소하시겠습니까?",
			"merge conflicts": "병합 충돌이 있습니다. 해결한 후 계속하세요.",
			"missing user info": "Git에서 'user.name' 및 'user.email'을 구성하세요.",
			"never": "안 함",
			"never again": "다시 표시 안 함",
			"never ask again": "네, 다시 표시 안 함",
			"no changes": "커밋할 변경 내용이 없습니다.",
			"no changes stash": "스태시할 변경 내용이 없습니다.",
			"no more": "HEAD가 커밋을 가리키지 않으므로 실행 취소할 수 없습니다.",
			"no rebase": "진행 중인 다시 지정이 없습니다.",
			"no remotes added": "리포지토리에 원격 항목이 없습니다.",
			"no remotes to fetch": "이 리포지토리에 페치할 원격 항목이 구성되어 있지 않습니다.",
			"no remotes to publish": "리포지토리에 게시하도록 구성된 원격이 없습니다.",
			"no remotes to pull": "리포지토리에 풀하도록 구성된 원격 항목이 없습니다.",
			"no remotes to push": "리포지토리에 푸시하도록 구성된 원격이 없습니다.",
			"no staged changes": "커밋할 스테이징된 변경 사항이 없습니다.\r\n\r\n모든 변경 사항을 스테이징하고 직접 커밋하시겠습니까?",
			"no stashes": "리포지토리에 스태시가 없습니다.",
			"no tags": "이 리포지토리에는 태그가 없습니다.",
			"no verify commit not allowed": "확인 없는 커밋은 허용되지 않습니다. 'git.allowNoVerifyCommit' 설정을 통해 사용하도록 설정하세요.",
			"nobranch": "원격에 푸시할 분기를 체크 아웃하세요.",
			"ok": "확인",
			"open git log": "Git 로그 열기",
			"open repo": "리포지토리 열기",
			"openrepo": "열기",
			"openreponew": "새 창에서 열기",
			"pick branch pull": "다음에서 가져올 분기 선택",
			"pick provider": "'{0}' 분기를 다음에 게시할 공급자 선택:",
			"pick remote": "'{0}' 분기를 다음에 게시하려면 원격을 선택하세요:",
			"pick remote pull repo": "분기를 가져올 원격 선택",
			"pick stash to apply": "적용할 스태시 선택",
			"pick stash to drop": "삭제할 스태시 선택",
			"pick stash to pop": "표시할 스태시 선택",
			"proposeopen": "복제된 리포지토리를 여시겠습니까?",
			"proposeopen init": "초기화된 리포지토리를 여시겠습니까?",
			"proposeopen2": "복제된 리포지토리를 열거나 현재 작업 영역에 추가하시겠습니까?",
			"proposeopen2 init": "초기화된 리포지토리를 열거나 현재 작업 영역에 추가하겠습니까?",
			"provide branch name": "새 분기 이름을 제공하세요.",
			"provide commit hash": "커밋 해시를 제공하세요.",
			"provide commit message": "커밋 메시지를 제공하세요.",
			"provide remote name": "원격 이름을 제공하세요.",
			"provide stash message": "필요한 경우 스태시 메시지를 입력하세요.",
			"provide tag message": "태그에 주석을 달 메시지를 입력하세요.",
			"provide tag name": "태그 이름을 입력하세요.",
			"publish to": "{0}에 게시",
			"remote already exists": "원격 '{0}'이(가) 이미 존재합니다.",
			"remote branch at": "{0}에서 원격 분기",
			"remote name": "원격 이름",
			"remote name format invalid": "잘못된 원격 이름 형식",
			"remove remote": "제거할 원격 선택",
			"repourl": "리포지토리 URL",
			"restore file": "파일 복원",
			"restore files": "파일 복원",
			"save and commit": "모두 저장 및 커밋",
			"save and stash": "모두 저장 및 스태시",
			"select a branch to merge from": "병합할 분기 선택",
			"select a branch to rebase onto": "다시 지정할 대상 분기 선택",
			"select a ref to checkout": "체크아웃할 참조 선택",
			"select a ref to checkout detached": "분리 모드에서 체크 아웃할 참조 선택",
			"select a ref to create a new branch from": "ref를 선택하여 다음에서 '{0}' 분기를 만듭니다.",
			"select a tag to delete": "삭제할 태그 선택",
			"select branch to delete": "삭제할 분기 선택",
			"select log level": "로그 수준 선택",
			"selectFolder": "리포지토리 위치 선택",
			"show command output": "명령 출력 표시",
			"stash": "스태시",
			"stash merge conflicts": "스태시를 적용하는 중 병합 충돌이 발생했습니다.",
			"stash message": "스태시 메시지",
			"stashcheckout": "스태시 및 체크 아웃",
			"sure drop": "스태시 {0}을(를) 삭제하시겠습니까?",
			"sync is unpredictable": "이 작업은 '{0}/{1}'(으)로 커밋을 푸시하고 풀합니다.",
			"tag at": "{0}의 태그",
			"tag message": "메시지",
			"tag name": "태그 이름",
			"there are untracked files": "취소하는 경우 {0}개의 추적되지 않은 파일이 디스크에서 삭제됩니다.",
			"there are untracked files single": "취소한 경우 다음 추적되지 않은 파일이 디스크에서 삭제됩니다. {0}.",
			"undo commit": "병합 커밋 실행 취소",
			"unsaved files": "저장되지 않은 {0}개의 파일이 있습니다.\r\n\r\n커밋하기 전에 저장하시겠습니까?",
			"unsaved files single": "파일 {0}에는 계속하는 경우 커밋에 포함되지 않을 저장되지 않은 변경 내용이 있습니다.\r\n\r\n커밋하기 전에 저장하시겠습니까?",
			"unsaved stash files": "저장되지 않은 파일이 {0}개 있습니다.\r\n\r\n스태시하기 전에 저장하시겠습니까?",
			"unsaved stash files single": "계속하는 경우 파일의 저장되지 않은 변경 내용이 스태시에 포함되지 않습니다{0}.\r\n\r\n스태시하기 전에 저장하시겠습니까?",
			"warn untracked": "이렇게 하면 {0}개의 추적되지 않은 파일이 삭제됩니다!\r\n삭제 후에는 되돌릴 수 없습니다!\r\n이 파일은 영원히 손실됩니다.",
			"yes": "예",
			"yes discard tracked": "1개의 추적된 파일 취소",
			"yes discard tracked multiple": "{0}개의 추적된 파일 취소",
			"yes never again": "예, 다시 표시 안 함"
		},
		"dist/main": {
			"downloadgit": "Git 다운로드",
			"git20": "Git {0}이(가) 설치된 것 같습니다. 코드는 2 이하의 Git에서 최적으로 작동합니다.",
			"git2526": "설치된 Git {0}에 알려진 문제가 있습니다. Git 기능이 제대로 작동하도록 하려면 2.27 이상의 Git으로 업데이트하세요.",
			"looking": "다음에서 git을 찾는 중: {0}",
			"neverShowAgain": "다시 표시 안 함",
			"notfound": "Git을 찾을 수 없습니다. 'git.path'를 사용하여 Git을 설치하거나 구성합니다.",
			"updateGit": "Git 업데이트",
			"using git": "{1}에서 git {0}을(를) 사용하는 중"
		},
		"dist/model": {
			"no repositories": "사용 가능한 리포지토리가 없습니다.",
			"not supported": "'git.scanRepositories' 설정에서는 절대 경로를 사용할 수 없습니다.",
			"pick repo": "리포지토리 선택",
			"too many submodules": "'{0}' 리포지토리에 자동으로 열리지 않는 {1}개의 하위 모듈이 있습니다. 모듈 내의 파일을 열러 각 모듈을 개별적으로 열 수는 있습니다."
		},
		"dist/remoteSource": {
			"branch name": "분기 이름",
			"error": "$(error) 오류: {0}",
			"none found": "원격 리포지토리를 찾을 수 없습니다.",
			"pick url": "복제할 URL을 선택하세요.",
			"provide url": "리포지토리 URL 제공",
			"provide url or pick": "리포지토리 URL을 입력하거나 리포지토리 소스를 선택하세요.",
			"type to filter": "리포지토리 이름",
			"type to search": "리포지토리 이름(입력하여 검색)",
			"url": "URL"
		},
		"dist/repository": {
			"add known": "'{0}'을(를) .gitignore에 추가하시겠어요?",
			"added by them": "충돌: 타인이 추가",
			"added by us": "충돌: 자체 추가",
			"always pull": "항상 풀",
			"both added": "충돌: 양쪽에서 추가",
			"both deleted": "충돌: 양쪽에서 삭제",
			"both modified": "충돌: 양쪽에서 수정",
			"changes": "변경 사항",
			"commit": "커밋",
			"commit in rebase": "기준 주소를 다시 지정하는 중에는 커밋 메시지를 변경할 수 없습니다. 기준 주소 다시 지정 작업을 완료하고, 대신 대화형 기준 주소 다시 지정을 사용하세요.",
			"commitMessage": "메시지(커밋할 {0})",
			"commitMessageCountdown": "현재 줄에서 {0} 글자 남음",
			"commitMessageWarning": "현재 줄에서 {0} 글자 초과 {1}",
			"commitMessageWhitespacesOnlyWarning": "현재 커밋 메시지에는 공백 문자만 포함됩니다.",
			"commitMessageWithHeadLabel": "메시지('{1}'에서 커밋할 {0})",
			"deleted": "삭제",
			"deleted by them": "충돌: 타인이 삭제",
			"deleted by us": "충돌: 자체 삭제",
			"dont pull": "풀 안 함",
			"git.title.deleted": "{0}(삭제됨)",
			"git.title.index": "{0}(인덱스)",
			"git.title.ours": "{0}(우리의 변경 내용)",
			"git.title.theirs": "{0}(다른 사용자의 변경 내용)",
			"git.title.untracked": "{0}(추적되지 않음)",
			"git.title.workingTree": "{0}(작업 트리)",
			"huge": "'{0}'의 Git 리포지토리에 활성 변경 내용이 너무 많습니다. Git 기능의 하위 집합만 사용할 수 있도록 설정됩니다.",
			"ignored": "무시됨",
			"index added": "인덱스 추가됨",
			"index copied": "인덱스 복사됨",
			"index deleted": "인덱스 삭제됨",
			"index modified": "인덱스 수정됨",
			"index renamed": "인덱스 이름 변경됨",
			"intent to add": "추가할 의도",
			"merge changes": "변경 사항 병합",
			"modified": "수정",
			"neveragain": "다시 표시 안 함",
			"open": "열기",
			"pull": "풀",
			"pull branch maybe rebased": "현재 분기 '{0}'이(가) 다시 지정된 것 같습니다. 해당 분기로 풀하시겠습니까?",
			"pull maybe rebased": "현재 분기가 다시 지정된 것 같습니다. 해당 분기로 풀하시겠습니까?",
			"pull n": "{1}/{2}에서 {0}개 커밋 풀",
			"pull push n": "{2}/{3} 간에 {0}개 커밋 풀 및 {1}개 커밋 푸시",
			"push n": "{1}/{2}(으)로 {0}개 커밋 푸시",
			"push success": "성공적으로 푸시 되었습니다.",
			"staged changes": "스테이징된 변경 사항",
			"sync changes": "변경 내용 동기화",
			"sync is unpredictable": "동기화 중입니다. 취소하면 리포지토리가 손상될 수 있습니다.",
			"untracked": "추적되지 않음",
			"untracked changes": "추적되지 않은 변경 사항",
			"yes": "예"
		},
		"dist/statusbar": {
			"checkout": "분기/태그 체크 아웃...",
			"publish changes": "변경 내용 게시",
			"publish to": "{0}에 게시",
			"publish to...": "다음에 게시...",
			"rebasing": "기준 주소 다시 지정",
			"syncing changes": "변경 내용을 동기화하는 중..."
		},
		"dist/timelineProvider": {
			"git.index": "인덱스",
			"git.timeline.detail": "{0}  — {1}\r\n{2}\r\n\r\n{3}",
			"git.timeline.source": "Git 기록",
			"git.timeline.stagedChanges": "스테이징된 변경 내용",
			"git.timeline.uncommitedChanges": "커밋되지 않은 변경 내용",
			"git.timeline.you": "사용자",
			"git.workingTree": "작업 트리"
		},
		"package": {
			"colors.added": "추가된 리소스의 색입니다.",
			"colors.conflict": "충돌이 발생한 리소스의 색상입니다.",
			"colors.deleted": "삭제된 리소스의 색상입니다.",
			"colors.ignored": "무시된 리소스의 색상입니다.",
			"colors.modified": "수정된 리소스의 색상입니다.",
			"colors.renamed": "이름이 바뀌었거나 복사된 리소스의 색입니다.",
			"colors.stageDeleted": "스테이징되어 있는 삭제된 리소스의 색입니다.",
			"colors.stageModified": "스테이징되어 있는 수정된 리소스의 색입니다.",
			"colors.submodule": "서브모듈 자원의 색상",
			"colors.untracked": "추적되지 않은 리소스의 색상입니다.",
			"command.addRemote": "원격 추가...",
			"command.branch": "분기 만들기...",
			"command.branchFrom": "분기를 만듭니다...",
			"command.checkout": "다음으로 체크 아웃...",
			"command.checkoutDetached": "체크 아웃(분리됨)...",
			"command.cherryPick": "cherry-pick...",
			"command.clean": "변경 내용 취소",
			"command.cleanAll": "모든 변경 내용 취소",
			"command.cleanAllTracked": "추적된 모든 변경 내용 취소",
			"command.cleanAllUntracked": "추적되지 않은 모든 변경 내용 취소",
			"command.clone": "복제",
			"command.cloneRecursive": "복제(재귀)",
			"command.close": "리포지토리 닫기",
			"command.commit": "커밋",
			"command.commitAll": "모두 커밋",
			"command.commitAllAmend": "모두 커밋 (수정)",
			"command.commitAllAmendNoVerify": "모두 커밋(수정, 확인 안 함)",
			"command.commitAllNoVerify": "모두 커밋(확인 안 함)",
			"command.commitAllSigned": "모두 커밋(로그오프됨)",
			"command.commitAllSignedNoVerify": "모두 커밋(로그오프됨, 확인 안 함)",
			"command.commitEmpty": "빈 내용을 커밋합니다.",
			"command.commitEmptyNoVerify": "빈 상태로 커밋(확인 안 함)",
			"command.commitNoVerify": "커밋(확인 안 함)",
			"command.commitStaged": "스테이징된 항목 커밋",
			"command.commitStagedAmend": "스테이징된 항목 커밋(수정)",
			"command.commitStagedAmendNoVerify": "커밋 스테이징됨(수정, 확인 안 함)",
			"command.commitStagedNoVerify": "커밋 스테이징됨(확인 안 함)",
			"command.commitStagedSigned": "스테이징된 항목 커밋(로그오프됨)",
			"command.commitStagedSignedNoVerify": "커밋 스테이징됨(로그오프됨, 확인 안 함)",
			"command.createTag": "태그 만들기",
			"command.deleteBranch": "분기 삭제...",
			"command.deleteTag": "태그 삭제",
			"command.fetch": "페치",
			"command.fetchAll": "모든 원격에서 페치",
			"command.fetchPrune": "페치(정리)",
			"command.ignore": ".gitignore에 추가",
			"command.init": "리포지토리 초기화",
			"command.merge": "분기 병합...",
			"command.openAllChanges": "모든 변경 내용 열기",
			"command.openChange": "변경 내용 열기",
			"command.openFile": "파일 열기",
			"command.openHEADFile": "파일 열기(HEAD)",
			"command.openRepository": "리포지토리 열기",
			"command.publish": "분기 게시...",
			"command.pull": "풀",
			"command.pullFrom": "가져올 위치...",
			"command.pullRebase": "풀(다시 지정)",
			"command.push": "푸시",
			"command.pushFollowTags": "푸시(태그 팔로우)",
			"command.pushFollowTagsForce": "푸시(태그 팔로우, 강제 적용)",
			"command.pushForce": "푸시(강제)",
			"command.pushTags": "푸시 태그",
			"command.pushTo": "다음으로 푸시...",
			"command.pushToForce": "...로 푸시 (강제)",
			"command.rebase": "분기 다시 지정...",
			"command.rebaseAbort": "다시 지정 중단",
			"command.refresh": "새로 고침",
			"command.removeRemote": "원격 제거",
			"command.rename": "이름 바꾸기",
			"command.renameBranch": "분기 이름 바꾸기...",
			"command.restoreCommitTemplate": "커밋 템플릿 복원",
			"command.revealInExplorer": "사이드바에 표시",
			"command.revertChange": "변경 내용 되돌리기",
			"command.revertSelectedRanges": "선택한 범위 되돌리기",
			"command.setLogLevel": "로그 수준 설정...",
			"command.showOutput": "Git 출력 표시",
			"command.stage": "변경 내용 스테이징",
			"command.stageAll": "모든 변경 내용 스테이징",
			"command.stageAllMerge": "모든 병합 변경 내용 스테이징",
			"command.stageAllTracked": "추적된 모든 변경 내용 스테이징",
			"command.stageAllUntracked": "추적되지 않은 모든 변경 내용 스테이징",
			"command.stageChange": "변경 내용 스테이징",
			"command.stageSelectedRanges": "선택한 범위 스테이징",
			"command.stash": "스태시",
			"command.stashApply": "스태시 적용하기...",
			"command.stashApplyLatest": "최신 스태시 적용하기",
			"command.stashDrop": "스태시 삭제...",
			"command.stashIncludeUntracked": "스태시(미추적 포함)",
			"command.stashPop": "스태시 표시...",
			"command.stashPopLatest": "최신 슬래시 표시",
			"command.sync": "동기화",
			"command.syncRebase": "동기화(다시 지정)",
			"command.timelineCompareWithSelected": "선택한 항목과 비교",
			"command.timelineCopyCommitId": "커밋 ID 복사",
			"command.timelineCopyCommitMessage": "커밋 메시지 복사",
			"command.timelineOpenDiff": "변경 내용 열기",
			"command.timelineSelectForCompare": "비교를 위해 선택",
			"command.undoCommit": "마지막 커밋 실행 취소",
			"command.unstage": "변경 내용 스테이징 취소",
			"command.unstageAll": "모든 변경 내용 스테이징 취소",
			"command.unstageSelectedRanges": "선택한 범위 스테이징 취소",
			"config.allowForcePush": "강제 푸시(임대 사용 또는 사용 안 함)가 가능한지 여부를 제어합니다.",
			"config.allowNoVerifyCommit": "pre-commit 및 commit-msg 후크를 실행하지 않는 커밋이 허용되는지를 제어합니다.",
			"config.alwaysShowStagedChangesResourceGroup": "스테이징된 변경 내용 리소스 그룹을 항상 표시합니다.",
			"config.alwaysSignOff": "모든 커밋에 대한 확인 플래그를 제어합니다.",
			"config.autoRepositoryDetection": "리포지토리가 자동으로 감지되어야 하는 경우를 구성합니다.",
			"config.autoRepositoryDetection.false": "자동 리포지토리 검사를 사용하지 않습니다.",
			"config.autoRepositoryDetection.openEditors": "열려 있는 파일의 부모 폴더를 검사합니다.",
			"config.autoRepositoryDetection.subFolders": "현재 열려 있는 폴더의 하위 폴더를 검사합니다.",
			"config.autoRepositoryDetection.true": "현재 열려 있는 폴더의 하위 폴더와 열려 있는 파일의 부모 폴더를 모두 검사합니다.",
			"config.autoStash": "풀하기 전에 변경 내용을 스태시하고 풀하는 데 성공한 후 변경 내용을 복원합니다.",
			"config.autofetch": "true로 설정하면 커밋이 현재 Git 리포지토리의 기본 원격에서 자동으로 페치됩니다. 'all'로 설정하면 모든 원격에서 페치됩니다.",
			"config.autofetchPeriod": "#git.autofetch#가 사용되는 경우 각 자동 git fetch 사이의 시간(초)입니다.",
			"config.autorefresh": "자동 새로 고침을 사용할지 여부입니다.",
			"config.branchSortOrder": "분기의 정렬 순서를 제어합니다.",
			"config.branchValidationRegex": "새 분기 이름의 유효성을 검사하는 정규식입니다.",
			"config.branchWhitespaceChar": "새 브랜치 이름에서 공백을 대체하는 문자.",
			"config.checkoutType": "'다음으로 체크 아웃...'을 실행할 때 나열되는 Git 참조의 형식을 제어합니다.",
			"config.checkoutType.local": "로컬 분기",
			"config.checkoutType.remote": "원격 분기",
			"config.checkoutType.tags": "태그",
			"config.confirmEmptyCommits": "'Git: Commit Empty' 명령에 대한 빈 항목 생성 커밋을 항상 확인합니다.",
			"config.confirmForcePush": "강제 푸시하기 전에 확인을 요청할지 여부를 제어합니다.",
			"config.confirmNoVerifyCommit": "확인하지 않고 커밋하기 전에 확인을 요청할지를 제어합니다.",
			"config.confirmSync": "Git 리포지토리를 동기화하기 전에 확인합니다.",
			"config.countBadge": "Git 개수 배지를 제어합니다.",
			"config.countBadge.all": "모든 변경 내용을 계산합니다.",
			"config.countBadge.off": "카운터를 끕니다.",
			"config.countBadge.tracked": "추적된 변경 내용만 계산합니다.",
			"config.decorations.enabled": "Git에서 색과 배지를 탐색기와 열려 있는 편집기 뷰에 적용하는지 여부를 제어합니다.",
			"config.defaultCloneDirectory": "Git 리포지토리를 복제할 기본 위치입니다.",
			"config.detectSubmodules": "Git 하위 모듈을 자동으로 검색할지 여부를 제어합니다.",
			"config.detectSubmodulesLimit": "Git submodules 검출 개수의 제한을 제어합니다.",
			"config.discardAllScope": "`모든 변경 내용 취소` 명령으로 취소되는 변경 내용을 제어합니다. `all`이면 모든 변경 내용을 취소합니다. `tracked`이면 추적된 파일만 취소합니다. `prompt`이면 작업을 실행할 때마다 프롬프트 대화 상자를 표시합니다.",
			"config.enableCommitSigning": "GPG 또는 X.509로 서명 커밋을 사용합니다.",
			"config.enableSmartCommit": "단계적 변경 사항이 없는 경우 모든 변경 사항을 저장합니다.",
			"config.enableStatusBarSync": "Git Sync 명령이 상태 표시줄에 표시되는지 여부를 제어합니다.",
			"config.enabled": "Git을 사용하도록 설정했는지 여부입니다.",
			"config.fetchOnPull": "사용하도록 설정하면 풀할 때 모든 분기를 페치합니다. 그렇지 않으면 현재 분기만 페치합니다.",
			"config.followTagsWhenSync": "동기화 명령을 실행할 때 모든 푸시 태그를 팔로우합니다.",
			"config.ignoreLegacyWarning": "레거시 Git 경고를 무시합니다.",
			"config.ignoreLimitWarning": "리포지토리에 변경 내용이 너무 많으면 경고를 무시합니다.",
			"config.ignoreMissingGitWarning": "Git이 없으면 경고를 무시합니다.",
			"config.ignoreRebaseWarning": "풀할 때 분기가 다시 지정된 것 같은 경우 경고를 무시합니다.",
			"config.ignoreSubmodules": "파일 트리의 하위 모듈 수정 내용을 무시합니다.",
			"config.ignoreWindowsGit27Warning": "Windows에 Git 2.25~2.26이 설치되어 있는 경우 경고를 무시합니다.",
			"config.ignoredRepositories": "무시할 Git 리포지토리의 목록입니다.",
			"config.inputValidation": "커밋 메시지 입력 유효성 검사를 언제 표시할지 제어합니다.",
			"config.inputValidationLength": "경고 표시를 위한 커밋 메시지 길이 임계값을 제어합니다.",
			"config.inputValidationSubjectLength": "경고 표시를 위한 커밋 메시지 제목 길이 임계값을 제어합니다. `config.inputValidationLength` 값을 상속하려면 이 임계값 설정을 해제하세요.",
			"config.openAfterClone": "복제 후에 자동으로 리포지토리를 열지 여부를 제어합니다.",
			"config.openAfterClone.always": "항상 현재 창에서 엽니다.",
			"config.openAfterClone.alwaysNewWindow": "항상 새 창에서 엽니다.",
			"config.openAfterClone.prompt": "항상 동작을 확인합니다.",
			"config.openAfterClone.whenNoFolderOpen": "열려 있는 폴더가 없는 경우에만 현재 창에서 엽니다.",
			"config.openDiffOnClick": "변경을 클릭할 때 Diff 편집기가 열릴지 여부를 제어합니다. 그렇지 않으면 일반 편집기가 열립니다.",
			"config.path": "git 실행 파일의 경로 및 파일 이름입니다(예: `C:\\Program Files\\Git\\bin\\git.exe`(Windows)). 조회할 여러 경로를 포함하는 문자열 값의 배열일 수도 있습니다.",
			"config.postCommitCommand": "커밋 후 git 명령을 실행합니다.",
			"config.postCommitCommand.none": "커밋 후 명령을 실행하지 않습니다.",
			"config.postCommitCommand.push": "성공적인 커밋 후 'Git Push'를 실행합니다.",
			"config.postCommitCommand.sync": "성공적인 커밋 후 'Git Sync'를 실행합니다.",
			"config.promptToSaveFilesBeforeCommit": "Git가 제출(commit)하기 전에 저장되지 않은 파일을 검사할지를 제어합니다.",
			"config.promptToSaveFilesBeforeCommit.always": "저장되지 않은 파일이 있는지 확인합니다.",
			"config.promptToSaveFilesBeforeCommit.never": "이 검사를 사용하지 않도록 설정합니다.",
			"config.promptToSaveFilesBeforeCommit.staged": "저장되지 않은 스테이징된 파일만 확인합니다.",
			"config.promptToSaveFilesBeforeStash": "Git이 변경 사항을 스태시하기 전에 저장되지 않은 파일을 검사할지를 제어합니다.",
			"config.promptToSaveFilesBeforeStash.always": "저장되지 않은 파일이 있는지 확인합니다.",
			"config.promptToSaveFilesBeforeStash.never": "이 검사를 사용하지 않도록 설정합니다.",
			"config.promptToSaveFilesBeforeStash.staged": "저장되지 않은 스테이징된 파일만 확인합니다.",
			"config.pruneOnFetch": "페치할 때 정리합니다.",
			"config.pullTags": "풀할 때 모든 태그를 페치합니다.",
			"config.rebaseWhenSync": "동기화 명령을 실행할 때 Git에서 다시 지정을 사용하게 합니다.",
			"config.requireGitUserConfig": "명시적 Git 사용자 구성을 요구할지 또는 누락된 경우 Git에서 추측하도록 허용할지를 제어합니다.",
			"config.scanRepositories": "Git 리포지토리를 검색할 경로의 목록입니다.",
			"config.showCommitInput": "Git 소스 제어판에 커밋 입력을 표시할지 여부를 제어합니다.",
			"config.showInlineOpenFileAction": "Git 변경점 보기에서 파일 열기 동작 줄을 표시할지의 여부를 제어합니다.",
			"config.showProgress": "Git 작업에서 진행률을 표시할지 여부를 제어합니다.",
			"config.showPushSuccessNotification": "푸시가 성공했을 때 알림을 표시할지 여부를 제어합니다.",
			"config.smartCommitChanges": "스마트 커밋에서 자동으로 스테이징되는 변경 사항을 제어합니다.",
			"config.smartCommitChanges.all": "모든 변경 사항을 자동으로 스테이징합니다.",
			"config.smartCommitChanges.tracked": "추적된 변경 사항만 자동으로 스테이징했습니다.",
			"config.suggestSmartCommit": "스마트 커밋을 사용하도록 제안합니다(스테이징된 변경 사항이 없는 경우 모든 변경 사항 커밋).",
			"config.supportCancellation": "동기화 작업을 실행할 때 사용자가 작업을 취소할 수 있도록 알림이 표시되는지 여부를 제어합니다.",
			"config.terminalAuthentication": "통합 터미널에서 생성된 git 프로세스의 인증 처리기로 VS Code를 사용할지 여부를 제어합니다. 참고: 이 설정의 변경 내용을 적용하려면 터미널을 다시 시작해야 합니다.",
			"config.timeline.date": "타임라인 보기에서 항목에 사용할 날짜를 제어합니다.",
			"config.timeline.date.authored": "작성 날짜 사용",
			"config.timeline.date.committed": "커밋된 날짜 사용",
			"config.timeline.showAuthor": "타임라인 보기에 커밋 작성자를 표시할지를 제어합니다.",
			"config.untrackedChanges": "추적되지 않은 변경 내용의 작동 방식을 제어합니다.",
			"config.untrackedChanges.hidden": "추적되지 않은 변경 내용이 숨겨지고 여러 작업에서 제외됩니다.",
			"config.untrackedChanges.mixed": "추적 및 추적되지 않은 모든 변경 내용이 함께 표시되고 동일한 작업이 수행됩니다.",
			"config.untrackedChanges.separate": "추적되지 않은 변경 내용은 소스 제어 보기에 별도로 표시됩니다. 또한 여러 작업에서 제외됩니다.",
			"config.useCommitInputAsStashMessage": "커밋 입력 상자의 메시지를 기본 스태시 메시지로 사용할지 여부를 제어합니다.",
			"config.useForcePushWithLease": "강제 푸시가 좀 더 안전한 force-with-lease 변형을 사용하는지 여부를 제어합니다.",
			"description": "Git SCM 통합",
			"displayName": "Git",
			"submenu.branch": "분기",
			"submenu.changes": "변경 사항",
			"submenu.commit": "커밋",
			"submenu.commit.amend": "수정",
			"submenu.commit.signoff": "승인",
			"submenu.explorer": "Git",
			"submenu.pullpush": "풀, 푸시",
			"submenu.remotes": "원격",
			"submenu.stash": "스태시",
			"submenu.tags": "태그",
			"view.workbench.cloneRepository": "리포지토리를 로컬에서 복제할 수 있습니다.\r\n[리포지토리 복제](command:git.clone 'Git 확장이 활성화되면 리포지토리 복제')",
			"view.workbench.learnMore": "VS Code에서 Git 및 소스 제어를 사용하는 방법에 대해 자세히 알아보려면 [Microsoft Docs](https://aka.ms/vscode-scm)를 참조하세요.",
			"view.workbench.scm.disabled": "git 기능을 사용하려면 [설정]에서 git을 사용하도록 설정하세요(command:workbench.action.openSettings?%5B%22git.enabled%22%5D).\r\nVS Code에서 Git 및 소스 제어를 사용하는 방법에 대해 자세히 알아보려면 [Microsoft Docs](https://aka.ms/vscode-scm)를 참조하세요.",
			"view.workbench.scm.empty": "Git 기능을 사용하려면 Git 리포지토리가 포함된 폴더를 열거나 URL에서 복제할 수 있습니다.\r\n[폴더 열기](command:vscode.openFolder)\r\n[리포지토리 복제](command:git.clone)\r\nVS Code에서 Git 및 소스 제어를 사용하는 방법에 대해 자세히 알아보려면 [관련 문서를 참조](https://aka.ms/vscode-scm)하세요.",
			"view.workbench.scm.emptyWorkspace": "현재 열려 있는 작업 영역에 Git 리포지토리를 포함하는 폴더가 없습니다.\r\n[작업 영역에 폴더 추가](command:workbench.action.addRootFolder)\r\nVS Code에서 Git 및 소스 제어를 사용하는 방법에 대해 자세히 알아보려면 [관련 문서를 참조](https://aka.ms/vscode-scm)하세요.",
			"view.workbench.scm.folder": "현재 열린 폴더에 Git 리포지토리가 없습니다. Git에서 제공하는 소스 제어 기능을 사용하도록 설정할 리포지토리를 초기화할 수 있습니다.\r\n[리포지토리 초기화](command:git.init?%5Btrue%5D)\r\nVS Code에서 Git 및 소스 제어를 사용하는 방법에 대해 자세히 알아보려면 [Microsoft Docs](https://aka.ms/vscode-scm)를 읽어보세요.",
			"view.workbench.scm.missing": "유효한 git 설치가 검색되지 않았습니다. [git 출력](command:git.showOutput)에서 자세한 내용을 확인할 수 있습니다.\r\n[git을 설치하거나](https://git-scm.com/) [Microsoft Docs](https://aka.ms/vscode-scm)에서 VS Code에서 Git 및 소스 제어를 사용하는 방법에 대해 자세히 알아보세요.\r\n다른 버전의 제어 시스템을 사용하는 경우 추가 확장에 대해 [Marketplace를 검색](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22)할 수 있습니다.",
			"view.workbench.scm.workspace": "현재 열린 작업 영역에 Git 리포지토리가 포함된 폴더가 없습니다. Git에서 제공하는 소스 제어 기능을 사용하도록 설정할 폴더의 리포지토리를 초기화할 수 있습니다.\r\n[리포지토리 초기화](command:git.init)\r\nVS Code에서 Git 및 소스 제어를 사용하는 방법에 대해 자세히 알아보려면 [Microsoft Docs](https://aka.ms/vscode-scm)를 읽어보세요."
		}
	}
}