{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"dist/askpass-main": {
			"missOrInvalid": "Informations d'identification manquantes ou non valides."
		},
		"dist/autofetch": {
			"no": "Non",
			"not now": "Me demander plus tard",
			"suggest auto fetch": "Voulez-vous que Code exécute [périodiquement 'git fetch']({0}) ?",
			"yes": "Oui"
		},
		"dist/commands": {
			"HEAD not available": "La version HEAD de '{0}' n'est pas disponible.",
			"add": "Ajouter à l'espace de travail",
			"add remote": "Ajoutez une nouvelle machine distante...",
			"addFrom": "Ajouter un dépôt distant à partir d'une URL",
			"addfrom": "Ajouter un dépôt distant à partir de {0}",
			"addremote": "Ajouter un dépôt distant",
			"always": "Toujours",
			"are you sure": "Ceci va créer un dépôt Git dans '{0}'. Êtes-vous sûr de vouloir continuer ?",
			"auth failed": "Échec de l'authentification auprès de git remote.",
			"auth failed specific": "Échec de l'authentification auprès de git remote :\r\n\r\n{0}",
			"branch already exists": "Une branche nommée '{0}' existe déjà",
			"branch name": "Nom de la branche",
			"branch name format invalid": "Le nom de la branche doit correspondre à la regex : {0}",
			"cant push": "impossible de pousser les références vers la branche distante. Exécutez d'abord 'Récupérer' pour intégrer vos modifications.",
			"changed": "Niveau de journalisation remplacé par : {0}",
			"checkout detached": "Extraire en mode détaché...",
			"choose": "Choisir un dossier...",
			"clean repo": "Nettoyez l'arborescence de travail de votre dépôt avant l'extraction.",
			"clonefrom": "Cloner à partir de {0}",
			"cloning": "Clonage du dépôt Git '{0}'...",
			"commit": "Commiter les changements indexés",
			"commit anyway": "Créer un commit vide",
			"commit hash": "Commiter le code de hachage",
			"commit message": "Message de validation",
			"commitMessageWithHeadLabel2": "Message (commit sur '{0}')",
			"confirm delete": "Voulez-vous vraiment supprimer {0} ?\r\nAttention ! Cette action est irréversible.\r\nCe fichier sera définitivement perdu si vous l’effectuez.",
			"confirm delete multiple": "Voulez-vous vraiment supprimer {0} fichiers ?\r\nAttention ! Cette action est irréversible.\r\nCes fichiers seront définitivement perdus si vous l’effectuez.",
			"confirm discard": "Voulez-vous vraiment abandonner les changements apportés à {0} ?",
			"confirm discard all": "Voulez-vous vraiment abandonner tous les changements apportés à {0} fichiers ?\r\nAttention ! Cette action est irréversible.\r\nVotre plage de travail actuelle sera définitivement perdue si vous l’effectuez.",
			"confirm discard all 2": "{0}\r\n\r\nCette opération est IRRÉVERSIBLE, votre plage de travail actuelle sera DÉFINITIVEMENT PERDUE.",
			"confirm discard all single": "Voulez-vous vraiment abandonner les changements apportés à {0} ?",
			"confirm discard multiple": "Voulez-vous vraiment abandonner les changements apportés à {0} fichiers ?",
			"confirm emtpy commit": "Êtes-vous sûr d vouloir créer un commit vide ?",
			"confirm force delete branch": "La branche '{0}' n'est pas complètement fusionnée. Supprimer quand même ?",
			"confirm force push": "Vous êtes sur le point de forcer l’envoi des changements que vous avez apportés. Cette action peut être délétère et peut remplacer par inadvertance les changements apportés par d’autres utilisateurs.\r\n\r\nVoulez-vous vraiment continuer ?",
			"confirm no verify commit": "Vous êtes sur le point de valider vos changements sans vérification. Cela signifie que les crochets pre-commit vont être ignorés, ce qui n’est peut-être pas souhaitable.\r\n\r\nVoulez-vous vraiment continuer ?",
			"confirm publish branch": "La branche '{0}' n'a pas de branche en amont. Voulez-vous publier cette branche ?",
			"confirm restore": "Êtes-vous sûr de vouloir restaurer {0} ?",
			"confirm restore multiple": "Êtes-vous sûr de vouloir restaurer les fichiers {0} ?",
			"confirm stage file with merge conflicts": "Voulez-vous vraiment créer {0} avec des conflits de fusion ?",
			"confirm stage files with merge conflicts": "Voulez-vous vraiment créer {0} fichiers avec des conflits de fusion ?",
			"create branch": "Créez une branche...",
			"create branch from": "Créez une branche à partir de...",
			"create repo": "Initialiser le dépôt",
			"current": "Actuelle",
			"delete": "Supprimer le fichier",
			"delete branch": "Supprimer la branche",
			"delete file": "Supprimer le fichier",
			"delete files": "Supprimer les fichiers",
			"deleted by them": "Ils ont supprimé le fichier '{0}', et nous l'avons modifié.\r\n\r\nQue voulez-vous faire ?",
			"deleted by us": "Nous avons supprimé le fichier '{0}', et ils l'ont supprimé.\r\n\r\nQue voulez-vous faire ?",
			"discard": "Ignorer les modifications",
			"discardAll": "Ignorer les {0} fichiers",
			"discardAll multiple": "Abandonner 1 fichier",
			"force": "Forcer l'extraction",
			"force push not allowed": "Force push n’est pas autorisé, veuillez l’activer avec le paramètre 'git.allowForcePush'.",
			"git error": "Erreur Git",
			"git error details": "Git : {0}",
			"git.title.diff": "{0} ⟷ {1}",
			"git.title.diffRefs": "{0} ({1}) ⟷ {0} ({2})",
			"git.title.index": "{0} (index)",
			"git.title.ref": "{0} ({1})",
			"git.title.workingTree": "{0} (Arborescence de travail)",
			"init": "Choisir le dossier d’espace de travail dans lequel initialiser le dépôt git",
			"init repo": "Initialiser le dépôt",
			"invalid branch name": "Nom de branche non valide",
			"keep ours": "Conserver notre version",
			"keep theirs": "Conserver leur version",
			"learn more": "En savoir plus",
			"local changes": "Vos changements locaux vont être remplacés par l'extraction.",
			"merge commit": "Le dernier commit était un commit de fusion. Voulez-vous vraiment l'annuler ?",
			"merge conflicts": "Il existe des conflits de fusion. Corrigez-les avant la validation.",
			"missing user info": "Assurez-vous de configurer votre 'user.name' et 'user.email' dans git.",
			"never": "Jamais",
			"never again": "OK, Ne plus afficher",
			"never ask again": "OK, Ne plus me demander à nouveau",
			"no changes": "Il n'existe aucun changement à valider.",
			"no changes stash": "Aucune modification à remiser (stash).",
			"no more": "Impossible d’annuler car HEAD ne pointe vers aucune validation.",
			"no rebase": "Pas de rebase en cours.",
			"no remotes added": "Votre dépôt n'a pas de dépôt distant.",
			"no remotes to fetch": "Ce dépôt n'a aucun dépôt distant configuré pour rappatrier.",
			"no remotes to publish": "Votre dépôt n'a aucun dépôt distant configuré pour une publication.",
			"no remotes to pull": "Votre dépôt n'a aucun dépôt distant configuré pour un Pull.",
			"no remotes to push": "Votre dépôt n'a aucun dépôt distant configuré pour un Push.",
			"no staged changes": "Il n’existe aucun changement indexé à valider.\r\n\r\nVoulez-vous indexer tous vos changements et les valider directement ?",
			"no stashes": "Aucune remise (stash) à restaurer dans ce dépôt.",
			"no tags": "Ce dépôt n'a pas d'étiquette.",
			"no verify commit not allowed": "Les commits sans vérification ne sont pas autorisés. Activez-les à l'aide du paramètre 'git.allowNoVerifyCommit'.",
			"nobranch": "Vous devez extraire une branche dont vous souhaitez effectuer le Push vers un emplacement distant.",
			"ok": "OK",
			"open git log": "Ouvrir le journal Git",
			"open repo": "Ouvrir le dépôt",
			"openrepo": "Ouvrir",
			"openreponew": "Ouvrir dans une nouvelle fenêtre",
			"pick branch pull": "Sélectionner une branche à partir de laquelle tirer (pull)",
			"pick provider": "Choisissez un fournisseur sur lequel publier la branche '{0}' :",
			"pick remote": "Choisissez un dépôt distant où publier la branche '{0}' :",
			"pick remote pull repo": "Choisir un dépôt distant duquel extraire la branche",
			"pick stash to apply": "Choisir une remise (stash) à appliquer",
			"pick stash to drop": "Choisir un remisage (stash) à supprimer",
			"pick stash to pop": "Choisir une remise (stash) à appliquer et supprimer",
			"proposeopen": "Voulez-vous ouvrir le dépôt cloné ?",
			"proposeopen init": "Voulez-vous ouvrir le dépôt initialisé ?",
			"proposeopen2": "Voulez-vous ouvrir le dépôt cloné ou l'ajouter à l'espace de travail actuel ?",
			"proposeopen2 init": "Souhaitez-vous ouvrir le dépôt initialisé, ou l’ajouter à l’espace de travail actuel ?",
			"provide branch name": "Fournissez un nouveau nom de branche",
			"provide commit hash": "Indiquez le code de hachage du commit",
			"provide commit message": "Indiquez un message de validation",
			"provide remote name": "Fournissez un nom de dépôt distant",
			"provide stash message": "Spécifier éventuellement un message pour la remise (stash)",
			"provide tag message": "Spécifiez un message pour annoter la balise",
			"provide tag name": "Spécifiez un nom de balise",
			"publish to": "Publier sur {0}",
			"remote already exists": "Le dépôt distant '{0}' existe déjà.",
			"remote branch at": "Branche distante à {0}",
			"remote name": "Nom du dépôt distant",
			"remote name format invalid": "Format non valide du nom de dépôt distant",
			"remove remote": "Choisir un dépôt distant à supprimer",
			"repourl": "URL de dépôt",
			"restore file": "Restaurer le fichier",
			"restore files": "Restaurer les fichiers",
			"save and commit": "Tout enregistrer et valider",
			"save and stash": "Tout enregistrer et faire un stash",
			"select a branch to merge from": "Sélectionner une branche à fusionner",
			"select a branch to rebase onto": "Sélectionner une branche où rebaser",
			"select a ref to checkout": "Sélectionner une référence à extraire",
			"select a ref to checkout detached": "Sélectionnez une référence à extraire en mode détaché",
			"select a ref to create a new branch from": "Sélectionner une référence à partir de laquelle créer la branche '{0}'",
			"select a tag to delete": "Sélectionner une étiquette à supprimer",
			"select branch to delete": "Sélectionner une branche à supprimer",
			"select log level": "Sélectionner le niveau de journalisation (log)",
			"selectFolder": "Sélectionner l'emplacement du dépôt",
			"show command output": "Afficher la sortie de commande",
			"stash": "Faire un stash quand même",
			"stash merge conflicts": "Il y a eu des conflits de fusion en appliquant la remise (stash).",
			"stash message": "Message pour la remise (stash)",
			"stashcheckout": "Faire un stash et extraire",
			"sure drop": "Voulez-vous vraiment annuler le stash : {0} ?",
			"sync is unpredictable": "Cette action va envoyer (push) et tirer (pull) des commits à destination et en provenance de '{0}/{1}'.",
			"tag at": "Balise sur {0}",
			"tag message": "Message",
			"tag name": "Nom de la balise",
			"there are untracked files": "{0} fichiers non suivis seront SUPPRIMÉS DU DISQUE s'ils sont ignorés.",
			"there are untracked files single": "Le fichier non suivi suivant sera SUPPRIMÉ DU DISQUE s'il est ignoré : {0}.",
			"undo commit": "Annuler le commit de fusion",
			"unsaved files": "Il y a {0} fichiers non sauvegardés.\r\n\r\nSouhaitez-vous sauvegarder avant de commiter ?",
			"unsaved files single": "Le fichier suivant a des changements non enregistrés qui ne seront pas inclus dans la validation si vous continuez : {0}.\r\n\r\nVoulez-vous l'enregistrer avant la validation ?",
			"unsaved stash files": "{0} fichiers n’ont pas été enregistrés.\r\n\r\nVoulez-vous les enregistrer avant de faire un stash ?",
			"unsaved stash files single": "Le fichier suivant contient des changements non enregistrés qui ne seront pas inclus dans le stash si vous continuez{0}: .\r\n\r\nVoulez-vous l’enregistrer avant de faire un stash ?",
			"warn untracked": "Cette action SUPPRIME {0} fichiers non suivis !\r\nCette action est IRRÉVERSIBLE !\r\nCes fichiers seront DÉFINITIVEMENT PERDUS.",
			"yes": "Oui",
			"yes discard tracked": "Ignorer 1 fichier suivi",
			"yes discard tracked multiple": "Ignorer {0} fichiers suivis",
			"yes never again": "Oui, Ne plus afficher"
		},
		"dist/main": {
			"downloadgit": "Télécharger Git",
			"git20": "Il semble que git {0} soit installé. Code fonctionne mieux avec git >= 2",
			"git2526": "Il existe des problèmes connus avec la version installée de Git {0}. Effectuez une mise à jour vers Git >= 2.27 pour permettre aux fonctionnalités Git de s'exécuter correctement.",
			"looking": "Recherche de git dans : {0}",
			"neverShowAgain": "Ne plus afficher",
			"notfound": "Git non trouvé. Installez-le et configurez-le en utilisant le paramètre 'git.path'.",
			"updateGit": "Mettre à jour Git",
			"using git": "Utilisation de git {0} à partir de {1}"
		},
		"dist/model": {
			"no repositories": "Aucun dépôt disponible",
			"not supported": "Chemins d’accès absolus non supportés dans le paramètre 'git.scanRepositories'.",
			"pick repo": "Choisir un dépôt",
			"too many submodules": "Le dépôt '{0}' a {1} sous-modules qui ne vont pas être ouverts automatiquement. Vous pouvez ouvrir chacun individuellement en ouvrant un fichier à l'intérieur."
		},
		"dist/remoteSource": {
			"branch name": "Nom de la branche",
			"error": "$(error) - Erreur : {0}",
			"none found": "Dépôts distants introuvables.",
			"pick url": "Choisissez l'URL à partir de laquelle effectuer le clonage.",
			"provide url": "Indiquer l'URL du dépôt",
			"provide url or pick": "Indiquez l'URL du dépôt, ou choisissez une source de dépôt.",
			"type to filter": "Nom du dépôt",
			"type to search": "Nom du dépôt (tapez pour effectuer une recherche)",
			"url": "URL"
		},
		"dist/repository": {
			"add known": "Voulez-vous ajouter '{0}' à .gitignore ?",
			"added by them": "Conflit : ajout de leur part",
			"added by us": "Conflit : ajout de notre part",
			"always pull": "Toujours tirer (pull)",
			"both added": "Conflit : ajout de leur part et de notre part",
			"both deleted": "Conflit : suppression de leur part et de notre part",
			"both modified": "Conflit : modification de leur part et de notre part",
			"changes": "Changements",
			"commit": "Commiter",
			"commit in rebase": "Il n’est pas possible de changer le message de validation au milieu d’un rebasage. Terminez l'opération de rebasage et utilisez le rebasage interactif à la place.",
			"commitMessage": "Message ({0} à valider)",
			"commitMessageCountdown": "{0} caractères restants sur la ligne actuelle",
			"commitMessageWarning": "{0} caractères sur {1} sur la ligne actuelle",
			"commitMessageWhitespacesOnlyWarning": "Le message de validation actuel contient uniquement des espaces",
			"commitMessageWithHeadLabel": "Message ({0} à valider sur '{1}')",
			"deleted": "Supprimé",
			"deleted by them": "Conflit : suppression de leur part",
			"deleted by us": "Conflit : suppression de notre part",
			"dont pull": "Ne pas tirer (pull)",
			"git.title.deleted": "{0} (supprimé)",
			"git.title.index": "{0} (Index)",
			"git.title.ours": "{0} (à nous)",
			"git.title.theirs": "{0} (à eux)",
			"git.title.untracked": "{0} (non suivi)",
			"git.title.workingTree": "{0} (arborescence de travail)",
			"huge": "Le dépôt Git dans '{0}' a trop de modifications actives, seul un sous-ensemble de fonctionnalités Git sera activé.",
			"ignored": "Ignoré",
			"index added": "Index ajouté",
			"index copied": "Index copié",
			"index deleted": "Index supprimé",
			"index modified": "Index modifié",
			"index renamed": "Index renommé",
			"intent to add": "Intention à ajouter",
			"merge changes": "Fusionner les changements",
			"modified": "Modifié le",
			"neveragain": "Ne plus afficher",
			"open": "Ouvrir",
			"pull": "Tirer (pull)",
			"pull branch maybe rebased": "Il semble que la branche actuelle '{0}' ait été rebasée. Voulez-vous vraiment effectuer un tirage (pull) dans celle-ci ?",
			"pull maybe rebased": "Il semble que la branche actuelle ait été rebasée. Voulez-vous vraiment effectuer un tirage (pull) dans celle-ci ?",
			"pull n": "Tirer (pull) {0} commits de {1}/{2}",
			"pull push n": "Tirer (pull) {0} et envoyer (push) {1} commits entre {2}/{3}",
			"push n": "Envoyer (push) {0} commits à {1}/{2}",
			"push success": "Envoi (push) réussi.",
			"staged changes": "Changements indexés",
			"sync changes": "Synchroniser les changements",
			"sync is unpredictable": "Synchronisation. L'annulation peut endommager gravement le dépôt",
			"untracked": "Non suivi",
			"untracked changes": "Changements non suivis",
			"yes": "Oui"
		},
		"dist/statusbar": {
			"checkout": "Extraire la branche/l'étiquette...",
			"publish changes": "Publier les modifications",
			"publish to": "Publier sur {0}",
			"publish to...": "Publier sur...",
			"rebasing": "Rebase en cours",
			"syncing changes": "Synchronisation des modifications..."
		},
		"dist/timelineProvider": {
			"git.index": "Index",
			"git.timeline.detail": "{0}  — {1}\r\n{2}\r\n\r\n{3}",
			"git.timeline.source": "Historique git",
			"git.timeline.stagedChanges": "Modifications en zone de transit",
			"git.timeline.uncommitedChanges": "Changements non commités",
			"git.timeline.you": "Vous",
			"git.workingTree": "Arborescence de travail"
		},
		"package": {
			"colors.added": "Couleur des ressources ajoutées.",
			"colors.conflict": "Couleur pour les ressources avec des conflits.",
			"colors.deleted": "Couleur des ressources supprimées.",
			"colors.ignored": "Couleur des ressources ignorées.",
			"colors.modified": "Couleur pour les ressources modifiées.",
			"colors.renamed": "Couleur des ressources renommées ou copiées.",
			"colors.stageDeleted": "Couleur des ressources supprimées qui ont été indexées.",
			"colors.stageModified": "Couleur des ressources modifiées qui ont été indexées.",
			"colors.submodule": "Couleur pour les ressources de sous-module.",
			"colors.untracked": "Couleur pour les ressources non tracées.",
			"command.addRemote": "Ajouter un dépôt distant...",
			"command.branch": "Créer une branche...",
			"command.branchFrom": "Créer une branche à partir de...",
			"command.checkout": "Extraire vers...",
			"command.checkoutDetached": "Extraire vers (mode détaché)...",
			"command.cherryPick": "Faire un cherry-pick...",
			"command.clean": "Ignorer les modifications",
			"command.cleanAll": "Ignorer toutes les modifications",
			"command.cleanAllTracked": "Ignorer tous les changements suivis",
			"command.cleanAllUntracked": "Ignorer tous les changements non suivis",
			"command.clone": "Cloner",
			"command.cloneRecursive": "Cloner (récursif)",
			"command.close": "Fermer le dépôt",
			"command.commit": "Activer",
			"command.commitAll": "Valider tout",
			"command.commitAllAmend": "Tout Valider (Modifier)",
			"command.commitAllAmendNoVerify": "Tout commiter (modifier, aucune vérification)",
			"command.commitAllNoVerify": "Tout commiter (aucune vérification)",
			"command.commitAllSigned": "Valider tout (signé)",
			"command.commitAllSignedNoVerify": "Tout commiter (signé, aucune vérification)",
			"command.commitEmpty": "Commit vide",
			"command.commitEmptyNoVerify": "Commiter le contenu vide (aucune vérification)",
			"command.commitNoVerify": "Commiter (aucune vérification)",
			"command.commitStaged": "Valider le contenu en zone de transit",
			"command.commitStagedAmend": "Valider les modifications en attente (modifier)",
			"command.commitStagedAmendNoVerify": "Commiter l'index (modifier, aucune vérification)",
			"command.commitStagedNoVerify": "Commiter l'index (aucune vérification)",
			"command.commitStagedSigned": "Valider les modifications en attente (signé)",
			"command.commitStagedSignedNoVerify": "Commiter l'index (signé, aucune vérification)",
			"command.createTag": "Créer une balise",
			"command.deleteBranch": "Supprimer la branche...",
			"command.deleteTag": "Supprimer l'étiquette",
			"command.fetch": "Rappatrier",
			"command.fetchAll": "Récupérer depuis tous les Remotes",
			"command.fetchPrune": "Récupérer (élaguer)",
			"command.ignore": "Ajouter à .gitignore",
			"command.init": "Initialiser le dépôt",
			"command.merge": "Fusionner la branche...",
			"command.openAllChanges": "Ouvrir tous les changements",
			"command.openChange": "Ouvrir les modifications",
			"command.openFile": "Ouvrir un fichier",
			"command.openHEADFile": "Ouvrir le fichier (HEAD)",
			"command.openRepository": "Ouvrir le dépôt",
			"command.publish": "Publier la branche...",
			"command.pull": "Pull",
			"command.pullFrom": "Extraire de...",
			"command.pullRebase": "Pull (rebaser)",
			"command.push": "Push",
			"command.pushFollowTags": "Pousser (suivre des balises)",
			"command.pushFollowTagsForce": "Pousser (suivre des balises, forcer)",
			"command.pushForce": "Pousser (forcer)",
			"command.pushTags": "Envoyer (push) des étiquettes",
			"command.pushTo": "Transfert (Push) vers...",
			"command.pushToForce": "Transfert (Push) vers... (Force)",
			"command.rebase": "Rebaser la branche...",
			"command.rebaseAbort": "Abandonner le rebasage",
			"command.refresh": "Actualiser",
			"command.removeRemote": "Supprimer le dépôt distant",
			"command.rename": "Renommer",
			"command.renameBranch": "Renommer la branche...",
			"command.restoreCommitTemplate": "Restaurer le modèle de commit",
			"command.revealInExplorer": "Révéler dans la barre latérale",
			"command.revertChange": "Restaurer la modification",
			"command.revertSelectedRanges": "Restaurer les portées sélectionnées",
			"command.setLogLevel": "Définir le niveau de journalisation (log) ...",
			"command.showOutput": "Afficher la sortie Git",
			"command.stage": "Mettre en attente les modifications",
			"command.stageAll": "Mettre en attente toutes les modifications",
			"command.stageAllMerge": "Indexer toutes les fusions de changements",
			"command.stageAllTracked": "Indexer tous les changements suivis",
			"command.stageAllUntracked": "Indexer tous les changements non suivis",
			"command.stageChange": "Mettre en attente la modification",
			"command.stageSelectedRanges": "Mettre en attente les plages sélectionnées",
			"command.stash": "Remiser (stash)",
			"command.stashApply": "Appliquer la remise (Stash)...",
			"command.stashApplyLatest": "Appliquer la dernière remise (Stash)",
			"command.stashDrop": "Supprimer le remisage (stash)...",
			"command.stashIncludeUntracked": "Remiser (Inclure les non-tracés)",
			"command.stashPop": "Appliquer et supprimer la remise...",
			"command.stashPopLatest": "Appliquer et supprimer la dernière remise",
			"command.sync": "Synchroniser",
			"command.syncRebase": "Synchroniser (Rebase)",
			"command.timelineCompareWithSelected": "Comparer avec la sélection",
			"command.timelineCopyCommitId": "Copier l'ID de commit",
			"command.timelineCopyCommitMessage": "Copiez le message de commit.",
			"command.timelineOpenDiff": "Ouvrir les modifications",
			"command.timelineSelectForCompare": "Sélectionner pour comparaison",
			"command.undoCommit": "Annuler la dernière validation",
			"command.unstage": "Annuler la mise en attente des modifications",
			"command.unstageAll": "Annuler la mise en attente de toutes les modifications",
			"command.unstageSelectedRanges": "Annuler la mise en attente des plages sélectionnées",
			"config.allowForcePush": "Contrôle si force push (avec ou sans lease) est activé.",
			"config.allowNoVerifyCommit": "Détermine si les commits sans exécution des crochets pre-commit et commit-msg sont autorisés.",
			"config.alwaysShowStagedChangesResourceGroup": "Toujours afficher le groupe de ressources des changements en zone de transit (Staged).",
			"config.alwaysSignOff": "Contrôle le flag signoff pour toutes les modifications.",
			"config.autoRepositoryDetection": "Configure le moment où les dépôts doivent être détectés automatiquement.",
			"config.autoRepositoryDetection.false": "Désactivez l’analyse de dépôt automatique.",
			"config.autoRepositoryDetection.openEditors": "Rechercher dans les dossiers parents de fichiers ouverts.",
			"config.autoRepositoryDetection.subFolders": "Rechercher dans les sous-dossiers du dossier actuellement ouvert.",
			"config.autoRepositoryDetection.true": "Recherchez dans les deux sous-dossiers du dossier ouvert en cours et dans les dossiers parents de fichiers ouverts.",
			"config.autoStash": "Remisez (stash) les changements avant de les tirer et de les restaurer après un tirage réussi.",
			"config.autofetch": "Quand la valeur est true, les commits sont automatiquement récupérés (fetch) à partir du dépôt distant par défaut du dépôt Git actuel. Quand la valeur est 'all', les commits sont récupérés à partir de tous les dépôts distants.",
			"config.autofetchPeriod": "Durée en secondes entre chaque récupération git automatique quand `git.autofetch` est activé.",
			"config.autorefresh": "Détermine si l'actualisation automatique est activée.",
			"config.branchSortOrder": "Contrôle l'ordre de tri des branches.",
			"config.branchValidationRegex": "Expression régulière pour valider les nouveaux noms de branche.",
			"config.branchWhitespaceChar": "Le caractère pour remplacer les espaces dans les nouveaux noms de branche.",
			"config.checkoutType": "Contrôle le type des références Git listées au moment de l'exécution de Extraire vers...",
			"config.checkoutType.local": "Branches locales",
			"config.checkoutType.remote": "Branches distantes",
			"config.checkoutType.tags": "Étiquettes",
			"config.confirmEmptyCommits": "Confirmez toujours la création de commits vides pour la commande 'Git: Commit Empty'.",
			"config.confirmForcePush": "Détermine s’il faut demander confirmation avant de forcer le push.",
			"config.confirmNoVerifyCommit": "Détermine si une confirmation doit être demandée avant un commit sans vérification.",
			"config.confirmSync": "Confirmez avant de synchroniser des dépôts git.",
			"config.countBadge": "Contrôle le badge de compte Git.",
			"config.countBadge.all": "Compter tous les changements.",
			"config.countBadge.off": "Désactivez le compteur.",
			"config.countBadge.tracked": "Compter uniquement les changements suivis.",
			"config.decorations.enabled": "Contrôle si Git contribue aux couleurs et aux badges de l'Explorateur et de la vue Éditeurs ouverts.",
			"config.defaultCloneDirectory": "Emplacement par défaut où cloner un dépôt git.",
			"config.detectSubmodules": "Contrôle s’il faut détecter automatiquement les sous-modules git.",
			"config.detectSubmodulesLimit": "Contrôle la limite de sous-modules git détectés.",
			"config.discardAllScope": "Contrôle les modifications ignorées par la commande 'Ignorer toutes les modifications'. 'all' ignore toutes les modifications. 'tracked' ignore uniquement les fichiers suivis. 'prompt' affiche un message d'invite chaque fois que l’action est exécutée.",
			"config.enableCommitSigning": "Active la signature de commit avec GPG ou X.509.",
			"config.enableSmartCommit": "Validez toutes les modifications en l'absence de modifications en attente.",
			"config.enableStatusBarSync": "Contrôle si la commande Git Sync apparaît dans la barre d'état.",
			"config.enabled": "Indique si git est activé.",
			"config.fetchOnPull": "Si activé, récupère toutes les branches au tirage. Sinon, récupère seulement la branche actuelle.",
			"config.followTagsWhenSync": "Suit l'envoi (push) de toutes les étiquettes au moment de l'exécution de la commande de synchronisation.",
			"config.ignoreLegacyWarning": "Ignore l'avertissement Git hérité.",
			"config.ignoreLimitWarning": "Ignore l'avertissement en cas de changements trop nombreux dans un dépôt.",
			"config.ignoreMissingGitWarning": "Ignore l'avertissement quand Git est manquant.",
			"config.ignoreRebaseWarning": "Ignore l'avertissement quand il semble que la branche ait été rebasée au moment du tirage (pull).",
			"config.ignoreSubmodules": "Ignore les modifications apportées aux sous-modules dans l'arborescence de fichiers.",
			"config.ignoreWindowsGit27Warning": "Ignore l'avertissement lorsque Git 2.25 - 2.26 est installé sur Windows.",
			"config.ignoredRepositories": "Liste des dépôts git à ignorer.",
			"config.inputValidation": "Contrôle quand afficher la validation de la saisie du message de commit.",
			"config.inputValidationLength": "Contrôle le taille de la longueur de message de commit pour afficher un avertissement.",
			"config.inputValidationSubjectLength": "Contrôle le seuil de longueur de l'objet du message de validation pour afficher un avertissement. Annulez pour hériter la valeur de 'config.inputValidationLength'.",
			"config.openAfterClone": "Détermine s'il est nécessaire d'ouvrir un dépôt automatiquement après le clonage.",
			"config.openAfterClone.always": "Effectue toujours l'ouverture dans la fenêtre active.",
			"config.openAfterClone.alwaysNewWindow": "Effectue toujours l'ouverture dans une nouvelle fenêtre.",
			"config.openAfterClone.prompt": "Demande toujours l'action à effectuer.",
			"config.openAfterClone.whenNoFolderOpen": "Effectue uniquement l'ouverture dans la fenêtre active quand aucun dossier n'est ouvert.",
			"config.openDiffOnClick": "Contrôle si l'éditeur de diff doit être ouvert quand l'utilisateur clique sur un changement. Sinon, l'éditeur normal est ouvert.",
			"config.path": "Chemin et nom de fichier de l'exécutable git. Exemple : 'C:\\Program Files\\Git\\bin\\git.exe' (Windows). Il peut s'agir également d'un tableau de valeurs de chaîne contenant plusieurs chemins de recherche.",
			"config.postCommitCommand": "Exécute une commande git après un commit réussi.",
			"config.postCommitCommand.none": "N'exécutez pas de commande après une validation.",
			"config.postCommitCommand.push": "Exécutez 'Git Push' après une validation réussie.",
			"config.postCommitCommand.sync": "Exécutez 'Git Sync' après une validation réussie.",
			"config.promptToSaveFilesBeforeCommit": "Contrôle si Git doit vérifier les fichiers non sauvegardés avant d'effectuer le commit.",
			"config.promptToSaveFilesBeforeCommit.always": "Vérifiez les fichiers non enregistrés.",
			"config.promptToSaveFilesBeforeCommit.never": "Désactivez la vérification.",
			"config.promptToSaveFilesBeforeCommit.staged": "Vérifiez uniquement les fichiers organisés non enregistrés.",
			"config.promptToSaveFilesBeforeStash": "Contrôle si Git doit rechercher les fichiers non enregistrés avant de faire un stash des changements.",
			"config.promptToSaveFilesBeforeStash.always": "Vérifiez les fichiers non enregistrés.",
			"config.promptToSaveFilesBeforeStash.never": "Désactive cette vérification.",
			"config.promptToSaveFilesBeforeStash.staged": "Vérifiez uniquement les fichiers organisés non enregistrés.",
			"config.pruneOnFetch": "Effectue un élagage au moment de la récupération.",
			"config.pullTags": "Récupérez toutes les balises pendant le tirage.",
			"config.rebaseWhenSync": "Forcez git à utiliser rebase pendant l'exécution de la commande sync.",
			"config.requireGitUserConfig": "Contrôle si une configuration utilisateur Git explicite est nécessaire ou si elle peut être devinée par Git quand elle est manquante.",
			"config.scanRepositories": "Liste des chemins d’accès pour rechercher des dépôts git.",
			"config.showCommitInput": "Détermine si l'entrée de commit doit être affichée dans le panneau de contrôle de code source Git.",
			"config.showInlineOpenFileAction": "Contrôle s’il faut afficher une action Ouvrir le fichier dans l’affichage des modifications de Git.",
			"config.showProgress": "Contrôle si les actions git doivent afficher la progression.",
			"config.showPushSuccessNotification": "Contrôle s’il faut afficher une notification en cas de réussite d'un envoi (push).",
			"config.smartCommitChanges": "Contrôle les modifications organisées automatiquement par Smart Commit.",
			"config.smartCommitChanges.all": "Organise automatiquement toutes les modifications.",
			"config.smartCommitChanges.tracked": "Organise automatiquement les modifications suivies uniquement.",
			"config.suggestSmartCommit": "Propose d'activer Smart Commit (valide toutes les modifications en l'absence de modifications organisées).",
			"config.supportCancellation": "Contrôle si une notification apparaît lors de l'exécution de l'action Sync, qui permet à l'utilisateur d'annuler l'opération.",
			"config.terminalAuthentication": "Détermine si VS Code doit être activé en tant que gestionnaire d'authentification pour les processus git générés dans le terminal intégré. Remarque : Les terminaux doivent redémarrer pour permettre la prise en compte des changements apportés à ce paramètre.",
			"config.timeline.date": "Contrôle la date à utiliser pour les éléments de la vue Chronologie.",
			"config.timeline.date.authored": "Utiliser la date de création",
			"config.timeline.date.committed": "Utiliser la date de commit",
			"config.timeline.showAuthor": "Contrôle si l'auteur du commit doit être affiché dans la vue Chronologie.",
			"config.untrackedChanges": "Contrôle le comportement des changements non suivis.",
			"config.untrackedChanges.hidden": "Les changements non suivis sont masqués et exclus de plusieurs actions.",
			"config.untrackedChanges.mixed": "Tous les changements, suivis et non suivis, apparaissent ensemble et se comportent de la même manière.",
			"config.untrackedChanges.separate": "Les changements non suivis apparaissent séparément dans la vue Contrôle de code source. Ils sont également exclus de plusieurs actions.",
			"config.useCommitInputAsStashMessage": "Détermine s'il est nécessaire d'utiliser le message de la zone d'entrée de commit en tant que message de stash par défaut.",
			"config.useForcePushWithLease": "Contrôles si force push utilise la variante force-with-lease plus sûr.",
			"description": "Intégration Git SCM",
			"displayName": "Git",
			"submenu.branch": "Branche",
			"submenu.changes": "Changements",
			"submenu.commit": "Valider",
			"submenu.commit.amend": "Modifier",
			"submenu.commit.signoff": "Fermer la session",
			"submenu.explorer": "Git",
			"submenu.pullpush": "Tirer (pull), envoyer (push)",
			"submenu.remotes": "À distance",
			"submenu.stash": "Remiser (stash)",
			"submenu.tags": "Étiquettes",
			"view.workbench.cloneRepository": "Vous pouvez cloner un dépôt localement.\r\n[Cloner un dépôt](command:git.clone « Cloner un dépôt une fois l’extension Git activée »)",
			"view.workbench.learnMore": "Pour en savoir plus sur l'utilisation de Git et du contrôle de code source dans VS Code, [lisez notre documentation](https://aka.ms/vscode-scm).",
			"view.workbench.scm.disabled": "Si vous voulez utiliser des fonctionnalités git, activez git dans vos [paramètres](command:workbench.action.openSettings?%5B%22git.enabled%22%5D).\r\nPour en savoir plus sur l'utilisation de Git et du contrôle de code source dans VS Code, [lisez notre documentation](https://aka.ms/vscode-scm).",
			"view.workbench.scm.empty": "Pour utiliser des fonctionnalités git, vous pouvez ouvrir un dossier contenant un dépôt git ou le cloner à partir d'une URL.\r\n[Ouvrir un dossier](command:vscode.openFolder)\r\n[Cloner le dépôt](command:git.clone)\r\nPour en savoir plus sur la façon d'utiliser git et le contrôle de code source dans VS Code [lisez nos documents](https://aka.ms/vscode-scm).",
			"view.workbench.scm.emptyWorkspace": "L'espace de travail actuellement ouvert n'a aucun dossier contenant des dépôts git.\r\n[Ajouter un dossier à l'espace de travail](command:workbench.action.addRootFolder)\r\nPour en savoir plus sur la façon d'utiliser git et le contrôle de code source dans VS Code [lisez nos documents](https://aka.ms/vscode-scm).",
			"view.workbench.scm.folder": "Le dossier actif ne contient aucun dépôt git. Vous pouvez initialiser un dépôt pour activer les fonctionnalités de contrôle de code source basées sur git.\r\n[Initialiser un dépôt](command:git.init?%5Btrue%5D)\r\nPour en savoir plus sur l’utilisation de git et le contrôle de code source dans VSCode, [consultez notre documentation](https://aka.ms/vscode-scm).",
			"view.workbench.scm.missing": "Aucune installation git valide n'a été détectée, plus de détails sont disponibles dans la [sortie git](command:git.showOutput).\r\n[Installez git](https://git-scm.com/) ou découvrez plus d'informations sur l'utilisation de Git et du contrôle de code source dans VS Code dans [notre documentation](https://aka.ms/vscode-scm).\r\nSi vous utilisez un système de contrôle de version différent, vous pouvez [rechercher dans la Plage de marché](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22) des extensions supplémentaires.",
			"view.workbench.scm.workspace": "L’espace de travail actif n’a aucun dossier contenant des dépôts git. Vous pouvez initialiser un dépôt dans un dossier pour activer les fonctionnalités de contrôle de code source basées sur git.\r\n[Initialiser un dépôt](command:git.init)\r\nPour en savoir plus sur l’utilisation de git et le contrôle de code source dans VS Code, [consultez notre documentation](https://aka.ms/vscode-scm)."
		}
	}
}